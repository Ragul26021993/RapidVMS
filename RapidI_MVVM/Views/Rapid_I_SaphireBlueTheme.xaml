<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:AttachedProp="clr-namespace:Rapid.AttachedProperties"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d">


    <!-- Resource dictionary entries should be defined here. -->
    <LinearGradientBrush x:Key="Button_BG_2" EndPoint="1,1" StartPoint="0,0">
        <GradientStop Offset="0.5" Color="Transparent"/>
        <GradientStop Color="#BFFFFFFF" Offset="1"/>
        <GradientStop Color="#BFFFFFFF" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Button_HL_BG_2" Color="White"/>
    <!--For Toolbar Toggle Button-->
    <Style x:Key="ScrollToolbarCheckBox2" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsCheckedTransition">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsUnchecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.504*"/>
                            <RowDefinition Height="0.496*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="2" CornerRadius="6" Opacity="0" Visibility="Visible">
                            <Border.Effect>
                                <BlurEffect Radius="2"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="BG_Normal" BorderThickness="0,0,1,1" Grid.RowSpan="2" CornerRadius="0,0,5,0" BorderBrush="{DynamicResource HeaderShading}" Margin="1" Background="{DynamicResource Button_BG_2}"/>
                        <Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="2" Opacity="0" BorderBrush="Black" CornerRadius="5" Margin="2" Background="{DynamicResource TabSelectorBrush_Highlight2}"/>
                        <ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard
									x:Name="OnMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard
									x:Name="OnMouseLeave_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard
									Storyboard="{StaticResource IsCheckedTransition}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard
									x:Name="IsUnchecked_BeginStoryboard" Storyboard="{StaticResource IsUnchecked}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <LinearGradientBrush x:Key="ButtonSelected_BorderBrush" EndPoint="1,1" MappingMode="RelativeToBoundingBox" StartPoint="0,0">
        <GradientStop Color="Black" Offset="0"/>
        <GradientStop Color="#FF007CD4" Offset="1"/>
    </LinearGradientBrush>
    <!--Scroll buttons template-->

    <SolidColorBrush x:Key="HeaderButton_BG" Color="#66A1C9FF"/>
    <Style x:Key="TabSelector2" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="EnlargeView">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                                <EasingThicknessKeyFrame KeyTime="0" Value="4"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ShrinkView">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="Normal1">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="4"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseEnter"/>
                        <Storyboard x:Key="MouseLeave"/>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="4,4,4,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.547*"/>
                            <RowDefinition Height="0.453*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <VisualStateManager.CustomVisualStateManager>
                            <ei:ExtendedVisualStateManager/>
                        </VisualStateManager.CustomVisualStateManager>
                        <Border x:Name="DarkGlow" BorderBrush="White" BorderThickness="1,1,1,0" Margin="0" Grid.RowSpan="2" CornerRadius="6,6,0,0" Opacity="0">
                            <Border.Effect>
                                <BlurEffect Radius="1"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="Normal1" BorderThickness="1,1,1,0" Margin="2" CornerRadius="5,5,0,0" Grid.RowSpan="2" Background="{DynamicResource HeaderButton_BG}" BorderBrush="{DynamicResource GlowBorder}"/>
                        <Border x:Name="Highlighted" BorderThickness="1,1,1,0" Margin="2,2,2,0" CornerRadius="5,5,0,0" Grid.RowSpan="2" Opacity="0" BorderBrush="White">
                            <Border.Background>
                                <!--Newely added resources-->
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDAEEFF" Offset="0"/>
                                    <GradientStop Color="#FF8ACDFF" Offset="0.5"/>
                                    <GradientStop Color="#FFDAEEFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <TextBlock x:Name="NormalDisplay" TextWrapping="Wrap" TextAlignment="Center" FontFamily="Arial Rounded MT Bold" VerticalAlignment="Center" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" Text="{TemplateBinding Content}" Grid.RowSpan="2" Foreground="White"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="DarkGlow" Value="0.5"/>
                            <Setter Property="Background" TargetName="Normal1" Value="#59FFFFFF"/>
                            <Setter Property="Background" TargetName="DarkGlow" Value="#FFACD4FF"/>
                            <Setter Property="BorderThickness" TargetName="DarkGlow" Value="1,1,1,0"/>
                            <Setter Property="Margin" TargetName="DarkGlow" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="Highlighted" Value="1"/>
                            <Setter Property="Foreground" TargetName="NormalDisplay" Value="Black"/>
                            <Setter Property="Margin" TargetName="grid" Value="2,2,2,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--For Toolbar Normal Button-->
    <Style x:Key="ScrollToolbar_NormalButton2" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource ToolbarButtonNormalColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.504*"/>
                            <RowDefinition Height="0.496*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="2" CornerRadius="6,0,6,0" Opacity="0" Visibility="Visible"/>
                        <Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="2" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_BG_2}" BorderBrush="{DynamicResource GlowBorder}"/>
                        <Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="2" Opacity="0" BorderBrush="Black" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_HL_BG_2}"/>
                        <ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="BGPressed" Value="0.3"/>
                            <Setter Property="Opacity" TargetName="Dark_GLow" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" >
                            <Setter TargetName="Dark_GLow" Property="Opacity" Value="0.5"/>
                            <Setter Property="Opacity" TargetName="BGPressed" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="ScrollToolBar_Normal_Green" TargetType="{x:Type Button}" >
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource ToolbarButtonGreenColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.504*"/>
                            <RowDefinition Height="0.496*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="2" CornerRadius="6,0,6,0" Opacity="0" Visibility="Visible"/>
                        <Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="2" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource ToolbarButtonGreenColorBrush}" BorderBrush="{DynamicResource GlowBorder}"/>
                        <Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="2" Opacity="0" BorderBrush="Black" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_HL_BG_2}"/>
                        <ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="BGPressed" Value="0.3"/>
                            <Setter Property="Opacity" TargetName="Dark_GLow" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" >
                            <Setter TargetName="Dark_GLow" Property="Opacity" Value="0.5"/>
                            <Setter Property="Opacity" TargetName="BGPressed" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--For Toolbar Normal Button With Icon Name-->
    <Style x:Key="ScrollToolbar_NormalButton2WithIconName" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource ToolbarButtonNormalColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.25*"/>
                            <RowDefinition Height="0.25*"/>
                            <RowDefinition Height="0.5*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="3" CornerRadius="6,0,6,0" Opacity="0" Visibility="Visible"/>
                        <Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="3" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_BG_2}" BorderBrush="{DynamicResource GlowBorder}"/>
                        <Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="3" Opacity="0" BorderBrush="Black" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_HL_BG_2}"/>
                        <ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="2" Text="{Binding (AttachedProp:AttachedButtonName.ButtonName), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="9.333" TextWrapping="Wrap"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="BGPressed" Value="0.3"/>
                            <Setter Property="Opacity" TargetName="Dark_GLow" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" >
                            <Setter TargetName="Dark_GLow" Property="Opacity" Value="0.5"/>
                            <Setter Property="Opacity" TargetName="BGPressed" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--For Toolbar Radio Button-->
    <Style x:Key="ScrollToolbar_RadioButton2" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource ToolbarButtonNormalColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsCheckedTransition">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsUnchecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.504*"/>
                            <RowDefinition Height="0.496*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="2" CornerRadius="6,0,6,0" Opacity="0" Visibility="Visible">
                            <Border.Effect>
                                <BlurEffect Radius="1"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="2" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_BG_2}" BorderBrush="{DynamicResource GlowBorder}"/>
                        <Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="2" Opacity="0" BorderBrush="Black" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_HL_BG_2}"/>
                        <ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BGPressed" Value="0.3"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="BGPressed" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="BGPressed" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--For Toolbar Radio Button With IconName with IconName-->
    <Style x:Key="ScrollToolbar_RadioButton2WithIconName" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource ToolbarButtonNormalColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsCheckedTransition">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsUnchecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.25*"/>
                            <RowDefinition Height="0.25*"/>
                            <RowDefinition Height=".5*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="3" CornerRadius="6,0,6,0" Opacity="0" Visibility="Visible"/>
                        <Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="3" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_BG_2}" BorderBrush="{DynamicResource GlowBorder}"/>
                        <Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="3" Opacity="0" BorderBrush="Black" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_HL_BG_2}"/>
                        <ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="2" Text="{Binding (AttachedProp:AttachedButtonName.ButtonName), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="9.333" TextWrapping="Wrap"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BGPressed" Value="0.3"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="BGPressed" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="BGPressed" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <!--For Toolbar Toggle Button-->
    <Style x:Key="ScrollToolbar_ToggButton2" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsCheckedTransition">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsUnchecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.504*"/>
                            <RowDefinition Height="0.496*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="2" CornerRadius="6,0,6,0" Opacity="0" Visibility="Visible">
                            <Border.Effect>
                                <BlurEffect Radius="1"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="2" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_BG_2}" BorderBrush="{DynamicResource GlowBorder}"/>
                        <Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="2" Opacity="0" BorderBrush="Black" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_HL_BG_2}"/>
                        <ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BGPressed" Value="0.3"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="BGPressed" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="BGPressed" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>


    <!--For Toolbar Toggle Button with Icon Name-->
    <Style x:Key="ScrollToolbar_ToggButton2WithIconName" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsCheckedTransition">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="IsUnchecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
                                <EasingThicknessKeyFrame KeyTime="0" Value="1"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.25*"/>
                            <RowDefinition Height="0.25*"/>
                            <RowDefinition Height="0.50*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="3" CornerRadius="6,0,6,0" Opacity="0" Visibility="Visible"/>
                        <Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="3" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_BG_2}" BorderBrush="{DynamicResource GlowBorder}"/>
                        <Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="3" Opacity="0" BorderBrush="Black" CornerRadius="5,0,5,0" Margin="1" Background="{DynamicResource Button_HL_BG_2}"/>
                        <ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="2" Text="{Binding (AttachedProp:AttachedButtonName.ButtonName), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="9.333" TextWrapping="Wrap"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BGPressed" Value="0.3"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="BGPressed" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="BGPressed" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <FontFamily x:Key="Sub_GB_HeaderFont">Arial Rounded MT Bold</FontFamily>
    <System:Double x:Key="SubHeader_GB_FontSize">14.667</System:Double>
    <ControlTemplate x:Key="Button_Right2" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="BtnMouseEnter1"/>
            <Storyboard x:Key="OnMouseLeave1"/>
            <Storyboard x:Key="OnClick1">
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="viewbox">
                    <EasingThicknessKeyFrame KeyTime="0" Value="5"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="10"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="5"/>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Normal1" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.Column="0" Grid.RowSpan="1" CornerRadius="0,5,5,0" Margin="1" Background="{TemplateBinding Background}" Grid.Row="0"/>
            <Border x:Name="Highlighted" BorderBrush="Black" BorderThickness="1" Grid.Column="0" Grid.RowSpan="1" Opacity="0" CornerRadius="0,6,6,0" Background="{DynamicResource Button_BG_2}" Margin="0"/>
            <Viewbox x:Name="viewbox" Grid.Column="0" Height="Auto" Grid.Row="0" VerticalAlignment="Stretch" Grid.RowSpan="1" HorizontalAlignment="Stretch" Width="Auto" Margin="{TemplateBinding Padding}">
                <ContentPresenter Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Content="{TemplateBinding Content}"/>
            </Viewbox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="Highlighted" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="Highlighted" Value="{DynamicResource Button_HL_BG_2}"/>
                <Setter Property="Opacity" TargetName="Highlighted" Value="0.4"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate TargetType="{x:Type Button}" x:Key="Button_Cenral2">
        <ControlTemplate.Resources>
            <Storyboard x:Key="BtnMouseEnter1"/>
            <Storyboard x:Key="OnMouseLeave1"/>
            <Storyboard x:Key="OnClick1">
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="viewbox">
                    <EasingThicknessKeyFrame KeyTime="0" Value="5"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="10"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="5"/>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Normal1" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.ColumnSpan="1" Grid.Column="0" Grid.Row="0" Grid.RowSpan="1" Background="{TemplateBinding Background}" Margin="1"/>
            <Border x:Name="Highlighted" BorderBrush="#7FFFFFFF" BorderThickness="1" Grid.ColumnSpan="1" Grid.Column="0" Grid.Row="0" Grid.RowSpan="1" Background="{DynamicResource Button_BG_2}" Opacity="0" Margin="0"/>
            <Viewbox x:Name="viewbox" Grid.Column="0" Height="Auto" Grid.Row="0" VerticalAlignment="Stretch" Grid.RowSpan="1" HorizontalAlignment="Stretch" Width="Auto" Margin="{TemplateBinding Padding}">
                <ContentPresenter Content="{TemplateBinding Content}"/>
            </Viewbox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="Highlighted" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" TargetName="Highlighted" Value="0.4"/>
                <Setter Property="Background" TargetName="Highlighted" Value="{DynamicResource Button_HL_BG_2}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate TargetType="{x:Type Button}" x:Key="Button_Left2">
        <ControlTemplate.Resources>
            <Storyboard x:Key="BtnMouseEnter1"/>
            <Storyboard x:Key="OnMouseLeave1"/>
            <Storyboard x:Key="OnClick1">
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="viewbox">
                    <EasingThicknessKeyFrame KeyTime="0" Value="5"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="10"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="5"/>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Normal1" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.Column="0" Grid.RowSpan="1" CornerRadius="5,0,0,5" Margin="1" Background="{TemplateBinding Background}" Grid.Row="0"/>
            <Border x:Name="Highlighted" BorderBrush="#7FFFFFFF" BorderThickness="1" Grid.Column="0" Grid.RowSpan="1" Opacity="0" CornerRadius="6,0,0,6" Background="{DynamicResource Button_BG_2}" Margin="0"/>
            <Viewbox x:Name="viewbox" Grid.Column="0" Height="Auto" Grid.Row="0" VerticalAlignment="Stretch" Grid.RowSpan="1" HorizontalAlignment="Stretch" Width="Auto" Margin="{TemplateBinding Padding}">
                <ContentPresenter Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Content="{TemplateBinding Content}"/>
            </Viewbox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="Highlighted" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="Highlighted" Value="{DynamicResource Button_HL_BG_2}"/>
                <Setter Property="Opacity" TargetName="Highlighted" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--Style for the DRO Button = by R.A.N.-->
    <Style x:Key="DROButton2" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#F3F3F3" Offset="0"/>
                    <GradientStop Color="#EBEBEB" Offset="0.5"/>
                    <GradientStop Color="#DDDDDD" Offset="0.5"/>
                    <GradientStop Color="#CDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter1"/>
                        <Storyboard x:Key="OnMouseLeave1"/>
                        <Storyboard x:Key="OnMouseLeftButtonDown1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
                                <EasingThicknessKeyFrame KeyTime="0" Value="10"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeftButtonUp1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="10"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnClick1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="10"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Width="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Highlighted" BorderBrush="White" BorderThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="1" Background="{DynamicResource Button_BG_2}" Opacity="0"/>
                        <Border Margin="0,2,4,0" VerticalAlignment="Center" Height="28" Background="{Binding (AttachedProp:AttachedDROProperties.DROTextBG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Grid.Column="1" >
                            <TextBlock TextWrapping="NoWrap" Text="{Binding (AttachedProp:AttachedDROProperties.DROText), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Foreground="{Binding (AttachedProp:AttachedDROProperties.DROTextFG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" TextAlignment="Right" VerticalAlignment="Center" FontSize="13.333" FontFamily="Segoe UI" Background="{Binding (AttachedProp:AttachedDROProperties.DROTextBG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Margin="0,0,0,0" Width="Auto" Height="Auto" Padding="0,2,2,0" HorizontalAlignment="Right" />
                        </Border>
                        <Viewbox x:Name="ContentHolder" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.RowSpan="1" Margin="1,1,0,1">
                            <Label Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="Highlighted" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="Highlighted" Value="0.9"/>
                            <Setter Property="VerticalAlignment" TargetName="ContentHolder" Value="Stretch"/>
                            <Setter Property="Margin" TargetName="ContentHolder" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DROButton3" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#F3F3F3" Offset="0"/>
                    <GradientStop Color="#EBEBEB" Offset="0.5"/>
                    <GradientStop Color="#DDDDDD" Offset="0.5"/>
                    <GradientStop Color="#CDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter1"/>
                        <Storyboard x:Key="OnMouseLeave1"/>
                        <Storyboard x:Key="OnMouseLeftButtonDown1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
                                <EasingThicknessKeyFrame KeyTime="0" Value="10"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeftButtonUp1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="10"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnClick1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="10"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Width="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Highlighted" BorderBrush="White" BorderThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="1" Background="{DynamicResource Button_BG_2}" Opacity="0"/>
                        <Border Margin="0,2,4,0" VerticalAlignment="Center" Height="28" Background="{Binding (AttachedProp:AttachedDROProperties.DROTextBG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Grid.Column="1" >
                            <TextBlock TextWrapping="NoWrap" Text="{Binding (AttachedProp:AttachedDROProperties.DROText), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Foreground="{Binding (AttachedProp:AttachedDROProperties.DROTextFG), 
                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" TextAlignment="Center" VerticalAlignment="Center" FontSize="15" 
                                       Background="{Binding (AttachedProp:AttachedDROProperties.DROTextBG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Margin="0,0,0,0" Width="Auto" Height="Auto" 
                                       Padding="0,2,2,0" HorizontalAlignment="Right" />
                        </Border>
                        <Viewbox x:Name="ContentHolder" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.RowSpan="1" Margin="1,1,0,1">
                            <Label Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="Highlighted" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="Highlighted" Value="0.9"/>
                            <Setter Property="VerticalAlignment" TargetName="ContentHolder" Value="Stretch"/>
                            <Setter Property="Margin" TargetName="ContentHolder" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DROLockButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#F3F3F3" Offset="0"/>
                    <GradientStop Color="#EBEBEB" Offset="0.5"/>
                    <GradientStop Color="#DDDDDD" Offset="0.5"/>
                    <GradientStop Color="#CDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter1"/>
                        <Storyboard x:Key="OnMouseLeave1"/>
                        <Storyboard x:Key="OnMouseLeftButtonDown1"/>
                        <Storyboard x:Key="OnMouseLeftButtonUp1"/>
                        <Storyboard x:Key="OnClick1"/>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Highlighted" BorderBrush="White" BorderThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="1" CornerRadius="5" Background="{DynamicResource Button_BG_2}" Opacity="0"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="Highlighted" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="Highlighted" Value="0.9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DROButton2ForDel_FI" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#F3F3F3" Offset="0"/>
                    <GradientStop Color="#EBEBEB" Offset="0.5"/>
                    <GradientStop Color="#DDDDDD" Offset="0.5"/>
                    <GradientStop Color="#CDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter1"/>
                        <Storyboard x:Key="OnMouseLeave1"/>
                        <Storyboard x:Key="OnMouseLeftButtonDown1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
                                <EasingThicknessKeyFrame KeyTime="0" Value="10"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeftButtonUp1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="10"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnClick1">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="10"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Width="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Highlighted" BorderBrush="White" BorderThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="1" CornerRadius="5" Background="{DynamicResource Button_BG_2}" Opacity="0"/>
                        <Border Margin="0,2,2,2" VerticalAlignment="Center" Height="40" Background="{Binding (AttachedProp:AttachedDROProperties.DROTextBG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Grid.Column="1" >
                            <TextBlock TextWrapping="NoWrap" Text="{Binding (AttachedProp:AttachedDROProperties.DROText), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Foreground="{Binding (AttachedProp:AttachedDROProperties.DROTextFG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" TextAlignment="Right" VerticalAlignment="Center" FontSize="{TemplateBinding FontSize}" FontFamily="/Rapid-I 5v2;component/Fonts/#Segoe UI" Background="{Binding (AttachedProp:AttachedDROProperties.DROTextBG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Margin="0,0,2,0" Width="Auto" Height="Auto" Padding="0,3,1,0" HorizontalAlignment="Right" />
                        </Border>
                        <Viewbox x:Name="ContentHolder" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.RowSpan="1" Margin="1,1,0,1">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"/>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="Highlighted" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="Highlighted" Value="0.9"/>
                            <Setter Property="VerticalAlignment" TargetName="ContentHolder" Value="Stretch"/>
                            <Setter Property="Margin" TargetName="ContentHolder" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TB_Label_Brush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFADADAD" Offset="0"/>
        <GradientStop Offset="0.25" Color="#7FFFFFFF"/>
        <GradientStop Color="#FFADADAD" Offset="1"/>
        <GradientStop Offset="0.75" Color="#7FFFFFFF"/>
    </LinearGradientBrush>
    <ControlTemplate x:Key="ToggleButtonControlTemplate2" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="MouseEnter"/>
            <Storyboard x:Key="MouseLeave"/>
        </ControlTemplate.Resources>
        <Grid x:Name="Maingrid" Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition x:Name="rowDefinition2" Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Highlighted" BorderBrush="Black" Grid.ColumnSpan="1" Grid.RowSpan="1" CornerRadius="0,5,5,0" Opacity="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border BorderThickness="1" Grid.ColumnSpan="1" Grid.RowSpan="1" Background="{TemplateBinding Background}" CornerRadius="5">
                <Path x:Name="_mouseover" Data="M240,240 L279.5,279.5 319.5,239.5 z" HorizontalAlignment="Center" Stretch="Fill" Stroke="{DynamicResource GlowBorder}" Width="Auto" Height="Auto" VerticalAlignment="Center" StrokeThickness="1" Fill="{DynamicResource GlowBorder}" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeDashCap="Round" d:LayoutOverrides="GridBox" Margin="1,2"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="Highlighted" Value="0.35"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" TargetName="Highlighted" Value="0.6"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="EmptyLabelDatagridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.Height" Value="Auto" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FFA6DAFF" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Blue" />
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>