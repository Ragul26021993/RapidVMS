<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"  
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	xmlns:Microsoft_Windows_Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
	xmlns:c="clr-namespace:Rapid.Converters"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:AttachedProp="clr-namespace:Rapid.AttachedProperties"  mc:Ignorable="d" >
	
	<!---/////////////////////////////////////////////////COLOR RESOURCES FOR RAPID-I UI///////////////////////////-->
	
	
	<!--Newely added resources-->
	<LinearGradientBrush x:Key="PanelBackground" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFDAEEFF" Offset="0"/>
		<GradientStop Color="#FF8ACDFF" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="HeaderShading" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.RelativeTransform>
			<TransformGroup>
				<ScaleTransform CenterY="0.5" CenterX="0.5"/>
				<SkewTransform CenterY="0.5" CenterX="0.5"/>
				<RotateTransform CenterY="0.5" CenterX="0.5"/>
				<TranslateTransform/>
			</TransformGroup>
		</LinearGradientBrush.RelativeTransform>
		<GradientStop Color="#FF002F5E" Offset="0.1"/>
		<GradientStop Color="#FF007CD4" Offset="1"/>
		<GradientStop Color="#FF007CF7"/>
		<GradientStop Color="#FF0073C6" Offset="0.9"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="BG_ColorGrad1" StartPoint="0.008,0.511" EndPoint="0.997,0.503">
		<GradientStop Color="#FF4BDAFF"/>
		<GradientStop Color="#FF007CD4" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TextStrokeBrush" Color="White"/>
	<!-- Resource dictionary entries should be defined here. -->
	<LinearGradientBrush x:Key="BlueButtonBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FF5184A9" Offset="0.15"/>
		<GradientStop Color="#FF244964" Offset="1"/>
		<GradientStop Color="White" Offset="0"/>
		<GradientStop Color="White" Offset="0.85"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="SnapRedStyle" Color="Red"/>
	<SolidColorBrush x:Key="SnapOrangeStyle" Color="#FFFFDE00"/>
	<SolidColorBrush x:Key="SnapGreenStyle" Color="Lime"/>
	<Style x:Key="SimpleLookingButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="29.484"/>
						</Grid.ColumnDefinitions>
						<Border x:Name="Normal" 
							BorderThickness="1" 
							BorderBrush="{TemplateBinding BorderBrush}" 
							CornerRadius="5" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
						<Border x:Name="Highlighted" 
							BorderThickness="1" 
							CornerRadius="5" Grid.ColumnSpan="2" Background="White" BorderBrush="Black" Opacity="0"/>
						<Rectangle x:Name="ModeIndicator" Grid.Column="1" RadiusY="3" RadiusX="3" Stroke="White" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16"/>
						<ContentPresenter Grid.ColumnSpan="1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto" Content="{TemplateBinding Content}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="Highlighted" Value="0.4"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="Highlighted" Value="0.6"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="YellowHighlighter" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="White" Offset="1"/>
		<GradientStop Color="#FFFEFF00" Offset="0.767"/>
		<GradientStop Color="#FFFEFF00" Offset="0.205"/>
		<GradientStop Color="White"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="TabSelectorBrush_Highlight" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF645522" Offset="0"/>
		<GradientStop Color="#FFFFE27D" Offset="0.2"/>
		<GradientStop Color="#FF645522" Offset="1"/>
		<GradientStop Color="#FFFFE27D" Offset="0.8"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="TabSelectorBrush_Highlight2" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFF7FF72" Offset="0.25"/>
		<GradientStop Color="#FFF7FF72" Offset="0.75"/>
		<GradientStop Color="White" Offset="1"/>
		<GradientStop Color="#FFBCBCBC"/>
		<GradientStop Color="White" Offset="0.125"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TabSelectorBrush_normal" Color="#FF007CD4"/>
	<LinearGradientBrush x:Key="TabSelectorBrush_normal2" StartPoint="0.456,0.008" EndPoint="0.456,0.983">
		<LinearGradientBrush.RelativeTransform>
			<TransformGroup>
				<ScaleTransform CenterY="0.5" CenterX="0.5"/>
				<SkewTransform CenterY="0.5" CenterX="0.5"/>
				<RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
				<TranslateTransform/>
			</TransformGroup>
		</LinearGradientBrush.RelativeTransform>
		<GradientStop Color="#FFB87E00" Offset="0.15"/>
		<GradientStop Color="#FF976700" Offset="0.85"/>
		<GradientStop Color="#FFFFBE30" Offset="0.95"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="PanelBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFB6B600" Offset="0"/>
		<GradientStop Color="#FFB6B600" Offset="1"/>
		<GradientStop Color="#FF727200" Offset="0.228"/>
		<GradientStop Color="#FF606000" Offset="0.764"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="PanelShadowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#99000000" Offset="1"/>
		<GradientStop Color="#99000000"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="BlueButtonOverBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FF0069B4" Offset="1"/>
		<GradientStop Color="#FF9ED6FF" Offset="1"/>
		<GradientStop Color="White" Offset="0.85"/>
		<GradientStop Color="#FF9ED6FF" Offset="0"/>
		<GradientStop Color="White" Offset="0.15"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F3F3F3" Offset="0"/>
		<GradientStop Color="#EBEBEB" Offset="0.5"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#CDCDCD" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
	<Style x:Key="ComboBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
	<Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true">
						<Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
						</Grid>
					</Microsoft_Windows_Themes:ButtonChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
		<GradientStop Color="#ABADB3" Offset="0.05"/>
		<GradientStop Color="#E2E3EA" Offset="0.07"/>
		<GradientStop Color="#E3E9EF" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
						<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="White" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
					</Microsoft_Windows_Themes:ButtonChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#E1E1E1" Offset="0"/>
		<GradientStop Color="#EDEDED" Offset="0.20"/>
		<GradientStop Color="#EDEDED" Offset="0.80"/>
		<GradientStop Color="#E3E3E3" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ArrowButtonBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF114B74" Offset="0.171"/>
		<GradientStop Color="#FF60DEFF" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ChildWindowBackColor" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="White"/>
		<GradientStop Color="#FF50B6FF" Offset="1"/>
		<GradientStop Color="#FFEEF8FF" Offset="0.368"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonMouseOverForecolor" Color="Black" PresentationOptions:Freeze="True"/>
	<LinearGradientBrush x:Key="TextBoxBGBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFADADAD" Offset="0"/>
		<GradientStop Color="#FFADADAD" Offset="1"/>
		<GradientStop Color="White" Offset="0.85"/>
		<GradientStop Color="White" Offset="0.15"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="GlowBorder" Color="White"/>
	<ControlTemplate x:Key="DropDownButtonStyle" TargetType="{x:Type ToggleButton}">
		<ControlTemplate.Resources>
			<Storyboard x:Key="MouseEnter"/>
			<Storyboard x:Key="MouseLeave"/>
		</ControlTemplate.Resources>
		<Grid x:Name="Maingrid" Margin="0">
			<Grid.RowDefinitions>
				<RowDefinition Height="0.532*"/>
				<RowDefinition Height="10.26"/>
				<RowDefinition Height="0.468*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="20"/>
			</Grid.ColumnDefinitions>
			<Border BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="3" Background="{TemplateBinding Background}" CornerRadius="5"/>
			<Border x:Name="Highlighted" BorderBrush="Black" BorderThickness="1" Grid.ColumnSpan="1" Grid.RowSpan="3" CornerRadius="5,0,0,5" Opacity="0">
				<Border.Background>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="White" Offset="0"/>
						<GradientStop Color="White" Offset="1"/>
					</LinearGradientBrush>
				</Border.Background>
			</Border>
			<Path x:Name="arrow" Data="M240,240 L279.5,279.5 319.5,239.5" HorizontalAlignment="Center" Stretch="Fill" Stroke="{DynamicResource GlowBorder}" Width="15" Height="6.75" VerticalAlignment="Bottom" Grid.Column="1" StrokeThickness="1" Grid.RowSpan="1" Grid.Row="1" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeDashCap="Round" StrokeLineJoin="Round"/>
			<Path x:Name="_mouseover" Data="M240,240 L279.5,279.5 319.5,239.5 z" HorizontalAlignment="Center" Stretch="Fill" Stroke="{DynamicResource GlowBorder}" Width="15" Height="6.99" VerticalAlignment="Top" Grid.Column="1" StrokeThickness="1" Grid.RowSpan="1" Grid.Row="1" Fill="{DynamicResource GlowBorder}" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeDashCap="Round" Margin="0,0,0,3.375"/>
			<ContentPresenter x:Name="conP" HorizontalAlignment="Center" Margin="0" Width="Auto" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.RowSpan="4"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Opacity" TargetName="Highlighted" Value="0.4"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Opacity" TargetName="Highlighted" Value="0.6"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="Placement" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="15"/>
			</Grid.ColumnDefinitions>
			<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Grid.ColumnSpan="2" />
			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
				<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
					<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource ButtonMouseOverForecolor}" BorderThickness="1" Opacity="1" Background="{DynamicResource PanelBackground}" CornerRadius="0,0,6,6">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Microsoft_Windows_Themes:SystemDropShadowChrome>
			</Popup>
			<Border BorderBrush="White" BorderThickness="0" CornerRadius="0,0,0,0" Margin="1,1,0,1" Background="{DynamicResource TextBoxBGBrush}">
				<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" SelectionBrush="#FF73BCFF" Background="{DynamicResource TextBoxBGBrush}" Margin="2,0"/>
			</Border>
			<ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Template="{DynamicResource ToggleButtonControlTemplate2}" Margin="0,2" Width="13" Height="10" HorizontalAlignment="Center"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsKeyboardFocusWithin" Value="true">
				<Setter Property="Foreground" Value="Black"/>
			</Trigger>
			<Trigger Property="IsDropDownOpen" Value="true"/>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				<Setter Property="Background" Value="#FFF4F4F4"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
				<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
			</Trigger>
			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false"/>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="SmartComboBox1" TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Padding" Value="4,3"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
						</Grid.ColumnDefinitions>
						<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
							<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
								<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
									<ScrollViewer x:Name="DropDownScrollViewer">
										<Grid RenderOptions.ClearTypeHint="Enabled">
											<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
												<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" Opacity="0.6"/>
											</Canvas>
											<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										</Grid>
									</ScrollViewer>
								</Border>
							</Microsoft_Windows_Themes:SystemDropShadowChrome>
						</Popup>
						<ToggleButton BorderBrush="{DynamicResource PanelBorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" Background="{DynamicResource TextBoxBGBrush}"/>
						<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
							<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							<Setter Property="Background" Value="#FFF4F4F4"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Padding" Value="3"/>
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<SolidColorBrush x:Key="BorderBrush_Title" Color="#FF007CD4"/>
	<SolidColorBrush x:Key="DroBackColor" Color="#FF007CD4" PresentationOptions:Freeze="True"/>
	<SolidColorBrush x:Key="AlternatingRowBackground_DG" Color="#FFC4E5FF"/>
	<LinearGradientBrush x:Key="ChildWindowHeaderColor" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF50B6FF" Offset="0"/>
		<GradientStop Color="White" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ContextMenuBackColor" Color="Honeydew" PresentationOptions:Freeze="true"/>
	<SolidColorBrush x:Key="RowBackground_DG" Color="#FF9BD7FF"/>
	<SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
	<LinearGradientBrush x:Key="ToolbarColor" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFBCE5FF" Offset="0"/>
		<GradientStop Color="#FFBCE5FF" Offset="1"/>
		<GradientStop Color="#FFE5FDFF" Offset="0.136"/>
		<GradientStop Color="#FFE5FDFF" Offset="0.396"/>
		<GradientStop Color="#FFBCE5FF" Offset="0.5"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="UpDropDownBackColor" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF73F5FF" Offset="0"/>
		<GradientStop Color="#FF1F6E76" Offset="1"/>
		<GradientStop Color="#FFD0FBFF" Offset="0.876"/>
		<GradientStop Color="White" Offset="0.712"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="UpperDropDownListBrush" EndPoint="0.5,1" StartPoint="0.5,0" SpreadMethod="Repeat">
		<GradientStop Color="#FFD3F4FF" Offset="0.5"/>
		<GradientStop Color="#FF7FDFFF" Offset="1"/>
		<GradientStop Color="#FF7FDFFF"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="GlowBodyBrush_Dark" Color="#FF0F3A58"/>
	<Style x:Key="SelectableToolbarContainer" TargetType="{x:Type GroupBox}">
		<Setter Property="BorderBrush" Value="#D5DFE5"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnMouseLeftButtonDown1"/>
						<Storyboard x:Key="TextBoxinFocus"/>
					</ControlTemplate.Resources>
					<Grid x:Name="LightingGrid" SnapsToDevicePixels="true">
						<Grid.Effect>
							<DropShadowEffect Opacity="0.6"/>
						</Grid.Effect>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6"/>
							<ColumnDefinition Width="Auto" MinWidth="154"/>
							<ColumnDefinition/>
							<ColumnDefinition Width="6"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="25"/>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border BorderBrush="Black" Grid.ColumnSpan="4" Grid.RowSpan="2" CornerRadius="8" BorderThickness="1,0,1,1" Background="{DynamicResource PanelBackground}"/>
						<Border BorderBrush="Black" BorderThickness="1,1,1,0" Grid.ColumnSpan="4" Grid.RowSpan="1" Background="{DynamicResource DroBackColor}" CornerRadius="8,8,0,0"/>
						<Grid x:Name="Header" Background="{x:Null}" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="0" Grid.RowSpan="1" Height="Auto">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Border BorderThickness="1" Grid.Column="0" Grid.RowSpan="1" CornerRadius="0" VerticalAlignment="Stretch">
								<Border.Effect>
									<DropShadowEffect BlurRadius="1" ShadowDepth="1"/>
								</Border.Effect>
								<TextBlock TextWrapping="Wrap" FontSize="18.667" Text="{TemplateBinding Header}" VerticalAlignment="Stretch" Foreground="White" FontWeight="Normal" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Left" Margin="0,1,0,-1"/>
							</Border>
						</Grid>
						<Grid x:Name="Chosen_Title" Grid.Column="2" Grid.RowSpan="1" Margin="40,0,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
							<ComboBox x:Name="SettingsComboBx" Grid.ColumnSpan="1" Grid.Column="0" HorizontalAlignment="Stretch" Grid.Row="0" VerticalAlignment="Stretch" d:LayoutOverrides="Height" Text="{Binding (AttachedProp:AttachedGrpTitle.GrpTitleText), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}}" FontSize="10.667" Style="{DynamicResource SmartComboBox1}" IsEditable="True" Grid.RowSpan="2" FontWeight="Normal" FontFamily="Segoe UI" Margin="0,3" BorderBrush="{DynamicResource GlowBodyBrush_Dark}" Background="{DynamicResource HeaderButton_BG}"/>
						</Grid>
						<ContentPresenter Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ToolbarButtonNormalColorBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="White" Offset="0.75"/>
		<GradientStop Color="#FF5A5A5A" Offset="1"/>
		<GradientStop Color="#FFBCBCBC" Offset="0"/>
		<GradientStop Color="White" Offset="0.25"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="ToolbarButtonGreenColorBrush" EndPoint="1,1" StartPoint="0,0">
		<GradientStop Color="#0098FB98" Offset="0.6"/>
		<GradientStop Color="PaleGreen" Offset="1"/>
		<GradientStop Color="PaleGreen" Offset="0"/>
		<GradientStop Color="#0098FB98" Offset="0.4"/>
	</LinearGradientBrush>


	<SolidColorBrush x:Key="MainWindowBorderBrush" Color="Black"/>
	<ControlTemplate x:Key="Shiny_SpButton2" TargetType="{x:Type Button}">
		<ControlTemplate.Resources>
			<Storyboard x:Key="BtnMouseEnter1">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Body_MouseOver">
					<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
					<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="OnMouseLeave1">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Body_MouseOver">
					<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
					<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="OnClick1">
				<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="viewbox">
					<EasingThicknessKeyFrame KeyTime="0" Value="5"/>
					<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="10"/>
					<EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="5"/>
				</ThicknessAnimationUsingKeyFrames>
			</Storyboard>
		</ControlTemplate.Resources>
		<Grid x:Name="grid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.019*"/>
				<ColumnDefinition Width="0.966*"/>
				<ColumnDefinition Width="0.015*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="0.038*"/>
				<RowDefinition Height="0.465*"/>
				<RowDefinition Height="0.497*"/>
			</Grid.RowDefinitions>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed"/>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Rectangle x:Name="Backbody" Grid.ColumnSpan="3" RadiusY="5" RadiusX="5" Grid.RowSpan="3" Stroke="{DynamicResource GlowBorder}" StrokeThickness="1" StrokeLineJoin="Round" Fill="{DynamicResource Button_BG_2}"/>
			<Rectangle x:Name="Body_MouseOver" Grid.ColumnSpan="3" RadiusY="5" RadiusX="5" Grid.RowSpan="3" Stroke="{x:Null}" StrokeThickness="2" StrokeLineJoin="Round" Fill="{DynamicResource Button_HL_BG_2}" Opacity="0"/>
			<Viewbox x:Name="viewbox" Grid.Column="1" Height="Auto" Grid.Row="1" VerticalAlignment="Stretch" Grid.RowSpan="2" HorizontalAlignment="Stretch" Width="Auto" Margin="2">
				<ContentPresenter Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Content="{TemplateBinding Content}"/>
			</Viewbox>
		</Grid>
		<ControlTemplate.Triggers>
			<EventTrigger RoutedEvent="Mouse.MouseLeave">
				<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
			</EventTrigger>
			<EventTrigger RoutedEvent="ButtonBase.Click">
				<BeginStoryboard x:Name="OnClick1_BeginStoryboard" Storyboard="{StaticResource OnClick1}"/>
			</EventTrigger>
			<EventTrigger RoutedEvent="Mouse.MouseEnter">
				<BeginStoryboard x:Name="BtnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource BtnMouseEnter1}"/>
			</EventTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
		<Setter Property="Margin" Value="0,0,11,0"/>
		<Setter Property="CornerRadius" Value="3,3,3,3"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="CornerRadius" Value="0,0,0,0"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<LinearGradientBrush x:Key="Tab_BGColor" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#7F002743" Offset="0.655"/>
		<GradientStop Color="#4C000000" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="Tab_SelectionBar" TargetType="{x:Type ToolBar}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FFFFFF" Offset="0"/>
					<GradientStop Color="#FFFBFF" Offset="0.5"/>
					<GradientStop Color="#F7F7F7" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Grid x:Name="Grid" SnapsToDevicePixels="true" VerticalAlignment="Stretch">
						<Grid.RowDefinitions>
							<RowDefinition Height="0.083*"/>
							<RowDefinition Height="0.917*"/>
						</Grid.RowDefinitions>
						<Border BorderThickness="1,1,1,0" CornerRadius="6" BorderBrush="White"/>
						<Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}" CornerRadius="8" Margin="10,0" Grid.RowSpan="1">
							<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local" VerticalAlignment="Stretch" LastChildFill="False">
								<ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DockPanel.Dock="Bottom" d:LayoutOverrides="Width"/>
							</DockPanel>
						</Border>
						<Border BorderBrush="White" BorderThickness="1,0,1,1" Grid.Row="1" CornerRadius="6" Background="{DynamicResource PanelBackground}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsOverflowOpen" Value="true"/>
						<Trigger Property="Header" Value="{x:Null}"/>
						<Trigger Property="ToolBarTray.IsLocked" Value="true"/>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
							<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
							<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
							<Setter Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
										<GradientStop Color="#FFFFFF" Offset="0"/>
										<GradientStop Color="#FFFBFF" Offset="0.5"/>
										<GradientStop Color="#F7F7F7" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
	<Style x:Key="CheckRadioFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TabSelector_2" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="#F4F4F4"/>
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="EnlargeView">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HIghlightedBody">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalDisplay">
								<EasingColorKeyFrame KeyTime="0" Value="Black"/>
								<EasingColorKeyFrame KeyTime="0:0:0.4" Value="Blue"/>
							</ColorAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
								<EasingColorKeyFrame KeyTime="0" Value="White"/>
								<EasingColorKeyFrame KeyTime="0:0:0.4" Value="Black"/>
							</ColorAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
								<EasingThicknessKeyFrame KeyTime="0" Value="4"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="0"/>
							</ThicknessAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="ShrinkView">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HIghlightedBody">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalDisplay">
								<EasingColorKeyFrame KeyTime="0" Value="Blue"/>
								<EasingColorKeyFrame KeyTime="0:0:0.4" Value="Black"/>
							</ColorAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
								<EasingColorKeyFrame KeyTime="0" Value="Black"/>
								<EasingColorKeyFrame KeyTime="0:0:0.4" Value="White"/>
							</ColorAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="border">
								<EasingThicknessKeyFrame KeyTime="0" Value="1"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="1"/>
							</ThicknessAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
								<EasingThicknessKeyFrame KeyTime="0" Value="0"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="4"/>
							</ThicknessAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseEnter">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HIghlightedBody">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseLeave">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HIghlightedBody">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="grid" Margin="4">
						<Grid.RowDefinitions>
							<RowDefinition Height="0.547*"/>
							<RowDefinition Height="0.453*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked"/>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<VisualStateManager.CustomVisualStateManager>
							<ei:ExtendedVisualStateManager/>
						</VisualStateManager.CustomVisualStateManager>
						<Rectangle x:Name="NormalBody" StrokeThickness="2" StrokeLineJoin="Round" Fill="{DynamicResource ToolbarButtonNormalColorBrush}" VerticalAlignment="Stretch" RadiusX="5" RadiusY="5" Grid.RowSpan="2"/>
						<Rectangle x:Name="HIghlightedBody" StrokeThickness="2" StrokeLineJoin="Round" Opacity="0" Fill="{DynamicResource TabSelectorBrush_Highlight}" RadiusX="5" RadiusY="5" Grid.RowSpan="2"/>
						<Border x:Name="border" BorderThickness="1" Margin="0" CornerRadius="4" Grid.RowSpan="2" BorderBrush="White">
							<TextBlock x:Name="NormalDisplay" TextWrapping="Wrap" TextAlignment="Center" FontFamily="Arial Rounded MT Bold" VerticalAlignment="Center" FontSize="{TemplateBinding FontSize}" Foreground="Black" HorizontalAlignment="Center" Text="{TemplateBinding Content}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter"/>
						<EventTrigger RoutedEvent="Mouse.MouseLeave"/>
						<Trigger Property="IsChecked" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="ShrinkView_BeginStoryboard1" Storyboard="{StaticResource ShrinkView}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="EnlargeView_BeginStoryboard" Storyboard="{StaticResource EnlargeView}"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="ContainerBorderBrush" Color="Black"/>
	<ControlTemplate TargetType="{x:Type GroupBox}" x:Key="GenericPanel">
		<Grid Opacity="1">
			<Grid.RowDefinitions>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Border Margin="0" Grid.Row="0" Background="{DynamicResource PanelBackground}" Opacity="1" Grid.RowSpan="1" CornerRadius="0,0,8,8" BorderThickness="1,0,1,1" BorderBrush="{DynamicResource ContainerBorderBrush}">
				<Border.Effect>
					<DropShadowEffect Opacity="0.8" ShadowDepth="4"/>
				</Border.Effect>
			</Border>
			<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" VerticalAlignment="Stretch"/>
		</Grid>
	</ControlTemplate>
	<LinearGradientBrush x:Key="MenuBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F6F6F6" Offset="0.25"/>
		<GradientStop Color="#EAE8E8" Offset="0.25"/>
		<GradientStop Color="#DCD9D9" Offset="0.8"/>
		<GradientStop Color="White" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="RapidMenu" TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="{StaticResource MenuBackground}"/>
		<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
		<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
		<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
		<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollPanelBtnStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="IsCheckedTransition">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseEnter">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="BG_Normal">
								<EasingColorKeyFrame KeyTime="0" Value="Black"/>
								<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FFFFAF00"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="IsUnchecked">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.504*"/>
							<RowDefinition Height="0.496*"/>
						</Grid.RowDefinitions>
						<Border x:Name="BG_Normal" BorderBrush="Black" BorderThickness="1" Grid.RowSpan="2">
							<Rectangle x:Name="BG_Rect" StrokeThickness="1" StrokeLineJoin="Round" Stroke="{DynamicResource TextBoxBorder}" Margin="0">
								<Rectangle.Fill>
									<LinearGradientBrush StartPoint="0.456,0.008" EndPoint="0.456,0.983">
										<LinearGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterY="0.5" CenterX="0.5"/>
												<SkewTransform CenterY="0.5" CenterX="0.5"/>
												<RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
												<TranslateTransform/>
											</TransformGroup>
										</LinearGradientBrush.RelativeTransform>
										<GradientStop Color="#FF55B9FF"/>
										<GradientStop Color="#FF55B9FF" Offset="0.835"/>
										<GradientStop Color="#FF0095FF" Offset="0.204"/>
										<GradientStop Color="White" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Border>
						<Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="2" Opacity="0">
							<Rectangle x:Name="BackgroundPRessed" StrokeThickness="1" StrokeLineJoin="Round" Stroke="{DynamicResource TextBoxBorder}" Margin="0">
								<Rectangle.Fill>
									<LinearGradientBrush StartPoint="0.456,0.008" EndPoint="0.456,0.983">
										<GradientStop Color="#FFE09E10" Offset="0.85"/>
										<GradientStop Color="#FF976800" Offset="0.95"/>
										<GradientStop Color="#FFAF811D" Offset="0.15"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Border>
						<ContentPresenter Grid.RowSpan="2" Opacity="0"/>
						<Viewbox x:Name="ViewB1" Margin="3" Grid.RowSpan="2">
							<Grid x:Name="IconHolder" Margin="0" Height="44" Width="43.917"/>
						</Viewbox>
						<Rectangle x:Name="Shine" Margin="3,3,3,0" StrokeThickness="0.5" StrokeLineJoin="Round" Height="Auto" Width="Auto">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#7FFFFFFF" Offset="0"/>
									<GradientStop Color="#19FFFFFF" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<RemoveStoryboard BeginStoryboardName="OnMouseEnter_BeginStoryboard"/>
						</EventTrigger>
						<Trigger Property="IsChecked" Value="true" >
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="IsUnchecked_BeginStoryboard" Storyboard="{StaticResource IsUnchecked}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource IsCheckedTransition}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="ToolbarBorderColor" Color="Blue"/>
	<!--Scroll buttons template-->
	<Style x:Key="ScrToolbar_RadioButton1" TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{DynamicResource ToolbarButtonNormalColorBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="IsCheckedTransition">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
								<EasingThicknessKeyFrame KeyTime="0" Value="1"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
							</ThicknessAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
								<EasingThicknessKeyFrame KeyTime="0" Value="2"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</ThicknessAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseEnter">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="IsUnchecked">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
								<EasingThicknessKeyFrame KeyTime="0" Value="2"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</ThicknessAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
								<EasingThicknessKeyFrame KeyTime="0" Value="1"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
							</ThicknessAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseLeave">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.504*"/>
							<RowDefinition Height="0.496*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked"/>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="2" CornerRadius="6" Background="{DynamicResource GlowBodyBrush_Dark}" Opacity="0" Visibility="Visible"/>
						<Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="2" CornerRadius="5" BorderBrush="{DynamicResource HeaderShading}" Margin="2">
							<Rectangle x:Name="BG_Rect" StrokeLineJoin="Round" Fill="{DynamicResource ToolbarButtonNormalColorBrush}" RadiusX="4.5" RadiusY="4.5" StrokeThickness="0"/>
						</Border>
						<Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="2" Opacity="0" BorderBrush="Black" CornerRadius="5" Margin="2" Background="{DynamicResource TabSelectorBrush_Highlight2}"/>
						<ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="Dark_GLow" Value="0.5"/>
							<Setter Property="Opacity" TargetName="BGPressed" Value="0.3"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Opacity" TargetName="BGPressed" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>
	<!--For Toolbar Toggle Button-->
	<Style x:Key="ScrToolbar_ToggButton1" TargetType="{x:Type ToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="IsCheckedTransition">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
								<EasingThicknessKeyFrame KeyTime="0" Value="1"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
							</ThicknessAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
								<EasingThicknessKeyFrame KeyTime="0" Value="2"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</ThicknessAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseEnter">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="IsUnchecked">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="BGPressed">
								<EasingThicknessKeyFrame KeyTime="0" Value="2"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</ThicknessAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BGPressed">
								<EasingThicknessKeyFrame KeyTime="0" Value="1"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="2"/>
							</ThicknessAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseLeave">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.504*"/>
							<RowDefinition Height="0.496*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked"/>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="2" CornerRadius="6" Background="{DynamicResource GlowBodyBrush_Dark}" Opacity="0" Visibility="Visible"/>
						<Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="2" CornerRadius="5" BorderBrush="{DynamicResource HeaderShading}" Margin="2">
							<Rectangle x:Name="BG_Rect" StrokeLineJoin="Round" Fill="{DynamicResource ToolbarButtonNormalColorBrush}" RadiusX="4.5" RadiusY="4.5" StrokeThickness="0"/>
						</Border>
						<Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="2" Opacity="0" BorderBrush="Black" CornerRadius="5" Margin="2" Background="{DynamicResource TabSelectorBrush_Highlight2}"/>
						<ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard
						x:Name="OnMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard
						x:Name="OnMouseLeave_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave}"/>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<Trigger Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard
					Storyboard="{StaticResource IsCheckedTransition}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard
					x:Name="IsUnchecked_BeginStoryboard" Storyboard="{StaticResource IsUnchecked}"/>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>
	<!--For Toolbar Normal Button-->
	<Style x:Key="ScrToolbar_NormalButton1" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{DynamicResource ToolbarButtonNormalColorBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnMouseEnter">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseLeave">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Dark_GLow">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BGPressed">
								<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dark_GLow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.504*"/>
							<RowDefinition Height="0.496*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Dark_GLow" BorderBrush="{DynamicResource GlowBorder}" BorderThickness="1" Grid.RowSpan="2" CornerRadius="6" Background="{DynamicResource GlowBodyBrush_Dark}" Opacity="0" Visibility="Visible"/>
						<Border x:Name="BG_Normal" BorderThickness="1" Grid.RowSpan="2" CornerRadius="5" BorderBrush="{DynamicResource HeaderShading}" Margin="2">
							<Rectangle x:Name="BG_Rect" StrokeLineJoin="Round" Fill="{DynamicResource ToolbarButtonNormalColorBrush}" RadiusX="4.5" RadiusY="4.5" StrokeThickness="0"/>
						</Border>
						<Border x:Name="BGPressed" BorderThickness="1" Grid.RowSpan="2" Opacity="0" BorderBrush="Black" CornerRadius="5" Margin="2" Background="{DynamicResource TabSelectorBrush_Highlight2}"/>
						<ContentPresenter Grid.RowSpan="2" Opacity="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsPressed" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave}"/>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<Trigger Property="IsPressed" Value="true" >
							<Setter TargetName="BGPressed" Property="Opacity" Value="1"/>
							<Setter TargetName="BGPressed" Property="BorderThickness" Value="2"/>
							<Setter TargetName="BGPressed" Property="Margin" Value="1"/>
							<Setter TargetName="Dark_GLow" Property="Opacity" Value="0.5"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>
	<!--End of scroll buttons section-->
	
	
	<!--Start of circular button section-->
	<Style x:Key="CircularGlassButton" TargetType="{x:Type Button}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<!-- Background Layer -->
							<Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="4"/>
							<!-- Refraction Layer -->
							<Ellipse x:Name="RefractionLayer">
								<Ellipse.Fill>
									<RadialGradientBrush GradientOrigin="0.496,1.052">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
												<TranslateTransform X="0.02" Y="0.3"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1"/>
										<GradientStop Offset="0.527" Color="#11FFFFFF"/>
									</RadialGradientBrush>
								</Ellipse.Fill>
							</Ellipse>
							<Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill" Margin="2" Opacity="1" d:IsHidden="True" Visibility="Hidden">
								<Path.RenderTransform>
									<ScaleTransform ScaleY="0.5" />
								</Path.RenderTransform>
								<Path.Data>
									<PathGeometry>
										<PathFigure IsClosed="True" StartPoint="98.999,45.499">
											<BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
											<BezierSegment
												IsSmoothJoin="True"
												Point1="75.860,47.685"
												Point2="69.111,45.196"
												Point3="50.167,45.196"/>
											<BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
											<BezierSegment
												IsSmoothJoin="True"
												Point1="7.469,52.580"
												Point2="1.000,53.252"
												Point3="1.000,44.999"/>
											<BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
											<BezierSegment
												IsSmoothJoin="True"
												Point1="9.106,14.370"
												Point2="27.875,0"
												Point3="50,0"/>
											<BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
											<BezierSegment
												IsSmoothJoin="True"
												Point1="99.139,39.369"
												Point2="98.999,40.084"
												Point3="98.999,45.499"/>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
								<Path.Fill>
									<RadialGradientBrush GradientOrigin="0.498,0.526">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1"
													ScaleY="1.997"/>
												<TranslateTransform X="0" Y="0.5"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#BFFFFFFF"/>
										<GradientStop Offset="0.85" Color="#92FFFFFF"/>
										<GradientStop Offset="0"/>
									</RadialGradientBrush>
								</Path.Fill>
							</Path>
							<!-- Reflection Layer -->
							<!-- ContentPresenter -->
							<ContentPresenter Margin="0,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>


						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="RefractionLayer" Property="Fill">
									<Setter.Value>
										<RadialGradientBrush GradientOrigin="0.496,1.052">
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform
														CenterX="0.5"
														CenterY="0.5"
														ScaleX="1.5"
														ScaleY="1.5"/>
													<TranslateTransform X="0.02" Y="0.3"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Offset="1" Color="#00FFFFFF"/>
											<GradientStop Offset="0.45" Color="#A1FFFFFF"/>
										</RadialGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter TargetName="ReflectionLayer" Property="Fill">
									<Setter.Value>
										<RadialGradientBrush GradientOrigin="0.498,0.526">
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform
														CenterX="0.5"
														CenterY="0.5"
														ScaleX="1"
														ScaleY="1.997"/>
													<TranslateTransform X="0" Y="0.5"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Offset="1" Color="#FFFFFFFF"/>
											<GradientStop Offset="0.85" Color="#BBFFFFFF"/>
											<GradientStop Offset="0" Color="#00FFFFFF"/>
										</RadialGradientBrush>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="RefractionLayer" Property="Fill">
									<Setter.Value>
										<RadialGradientBrush GradientOrigin="0.496,1.052">
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform
														CenterX="0.5"
														CenterY="0.5"
														ScaleX="1.5"
														ScaleY="1.5"/>
													<TranslateTransform X="0.02" Y="0.3"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Offset="1" Color="#00FFFFFF"/>
											<GradientStop Offset="0.3" Color="#FFFFFFFF"/>
										</RadialGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter TargetName="ReflectionLayer" Property="Fill">
									<Setter.Value>
										<RadialGradientBrush GradientOrigin="0.498,0.526">
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform
														CenterX="0.5"
														CenterY="0.5"
														ScaleX="1"
														ScaleY="1.997"/>
													<TranslateTransform X="0" Y="0.5"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Offset="1" Color="#CCFFFFFF"/>
											<GradientStop Offset="0.85" Color="#66FFFFFF"/>
											<GradientStop Offset="0" Color="#00FFFFFF"/>
										</RadialGradientBrush>
									</Setter.Value>
								</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--End of circular button section-->
	
	<Style x:Key="PullDownMenu" TargetType="{x:Type Menu}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Path Data="F1 M 520,150L 720,150L 720,188.461L 620,200L 520,188.461L 520,150 Z " Stretch="Fill" StrokeLineJoin="Round" Grid.RowSpan="1" Margin="0,0,-0.125,0" Grid.ColumnSpan="1">
							<Path.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#7F002D4D" Offset="0"/>
									<GradientStop Color="#7F007CD4" Offset="1"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path Stretch="Fill" StrokeLineJoin="Round" Data="F1 M 520,150L 619.834,140L 720,150L 719.834,190L 619.834,200L 519.834,190L 520,150 Z " HorizontalAlignment="Stretch" Height="61" Margin="259.667,64.616,-375.833,-83.367" Grid.Row="0" VerticalAlignment="Stretch" Width="201.166" Fill="#FFF3F3F3" d:LayoutOverrides="GridBox" d:IsHidden="True" Visibility="Hidden"/>
						<ScrollViewer Opacity="1" Grid.ColumnSpan="1" d:LayoutOverrides="GridBox" ScrollViewer.VerticalScrollBarVisibility="Hidden" VerticalContentAlignment="Center" Margin="0,0,0,10.267">
							<ItemsPresenter Margin="0"/>
						</ScrollViewer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ArrowButton" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Mouseover">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Mouseover">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseOver_reverse">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Mouseover">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MousePressedSB">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MousePressed">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MousePressedSB_Reverse">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MousePressed">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Path x:Name="BG_Default" Data="F1 M 620,198.71L 540,190.001L 700,190.001L 620,198.71 Z " RenderTransformOrigin="0.5,0.5" Stretch="Fill" Fill="{DynamicResource ArrowButtonBrush}">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleY="-1" ScaleX="1"/>
									<SkewTransform AngleY="0" AngleX="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
						<Path x:Name="Mouseover" Data="F1 M 620,198.71L 540,190.001L 700,190.001L 620,198.71 Z " RenderTransformOrigin="0.5,0.5" Stretch="Fill" Fill="{DynamicResource TabSelectorBrush_Highlight}" Opacity="0">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleY="-1" ScaleX="1"/>
									<SkewTransform AngleY="0" AngleX="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
						<Path x:Name="MousePressed" Data="F1 M 620,198.71L 540,190.001L 700,190.001L 620,198.71 Z " RenderTransformOrigin="0.5,0.5" Stretch="Fill" Fill="{DynamicResource TabSelectorBrush_Highlight}" Opacity="0" d:CopyToken="1c602ecd-28df-4c5d-8c9b-834d59cb2912">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleY="-1" ScaleX="1"/>
									<SkewTransform AngleY="0" AngleX="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="MouseOver_reverse_BeginStoryboard" Storyboard="{StaticResource MouseOver_reverse}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Mouseover}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="MousePressedSB_Reverse_BeginStoryboard" Storyboard="{StaticResource MousePressedSB_Reverse}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="MousePressedSB_BeginStoryboard" Storyboard="{StaticResource MousePressedSB}"/>
							</Trigger.EnterActions>
							<Setter Property="Fill" TargetName="MousePressed" Value="{DynamicResource TabSelectorBrush_normal}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="R_ScrollViewer" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.159*"/>
							<RowDefinition Height="0.638*"/>
							<RowDefinition Height="0.203*"/>
						</Grid.RowDefinitions>
						<Path Data="F1 M 520,150L 619.834,140L 720,150L 719.834,190L 619.834,200L 519.834,190L 520,150 Z " Fill="#FF032339" Stretch="Fill" Stroke="#FF032339" StrokeLineJoin="Round" Grid.RowSpan="3"/>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Row="1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="ScrollingMenu" TargetType="{x:Type ScrollViewer}">
		<Grid x:Name="Grid" Background="{TemplateBinding Background}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.118*"/>
				<ColumnDefinition Width="0.764*"/>
				<ColumnDefinition Width="0.118*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="0.177*"/>
				<RowDefinition Height="0.646*"/>
				<RowDefinition Height="0.176*"/>
			</Grid.RowDefinitions>
			<Path Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF032339" Fill="{DynamicResource BlueButtonBrush}" Data="F1 M 520,150L 619.834,140L 720,150L 719.834,190L 619.834,200L 519.834,190L 520,150 Z " Grid.Column="0" HorizontalAlignment="Stretch" Grid.RowSpan="3" Grid.ColumnSpan="3"/>
			<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="1" Grid.ColumnSpan="3" Grid.RowSpan="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
			<RepeatButton x:Name="UpScroll" Content="RepeatButton" Grid.Column="1" Style="{DynamicResource repeatBtn_1}" d:LayoutOverrides="Width, Height" RenderTransformOrigin="0.5,0.5" Margin="0,3,0,0" HorizontalAlignment="Stretch" Command="ScrollBar.LineUpCommand">
				<RepeatButton.RenderTransform>
					<TransformGroup>
						<ScaleTransform ScaleY="-1" ScaleX="1"/>
						<SkewTransform AngleY="0" AngleX="0"/>
						<RotateTransform Angle="0"/>
						<TranslateTransform/>
					</TransformGroup>
				</RepeatButton.RenderTransform>
			</RepeatButton>
			<RepeatButton x:Name="DownScroll" Content="RepeatButton" Grid.Column="1" Grid.Row="2" Style="{DynamicResource repeatBtn_1}" d:LayoutOverrides="VerticalAlignment, Width" Margin="0,0,0,3" HorizontalAlignment="Stretch" Command="ScrollBar.LineDownCommand"/>
		</Grid>
	</ControlTemplate>
	<LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
		<GradientStop Color="#E1E1E1" Offset="0"/>
		<GradientStop Color="#EDEDED" Offset="0.20"/>
		<GradientStop Color="#EDEDED" Offset="0.80"/>
		<GradientStop Color="#E3E3E3" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
		<Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="Bg" SnapsToDevicePixels="true">
						<Grid.RowDefinitions>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							<RowDefinition Height="0.00001*"/>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
						</Grid.RowDefinitions>
						<RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{DynamicResource ArrowButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
						<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
							</Track.Thumb>
						</Track>
						<RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="MinWidth" Value="0"/>
				<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									<ColumnDefinition Width="0.00001*"/>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Grid.ColumnDefinitions>
								<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
								<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
									</Track.Thumb>
								</Track>
								<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="repeatBtn_1" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="MousePressed">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MousePressed">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseOver1">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="BG_Def">
								<EasingColorKeyFrame KeyTime="0" Value="White"/>
								<EasingColorKeyFrame KeyTime="0:0:0.4" Value="White"/>
							</ColorAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="BG_Def">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseOver_Rev">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="BG_Def">
								<SplineColorKeyFrame KeyTime="0" Value="White"/>
								<SplineColorKeyFrame KeyTime="0:0:0.4" Value="White"/>
							</ColorAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="BG_Def">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Path x:Name="BG_Def" Data="F1 M 620,198.71L 540,190.001L 700,190.001L 620,198.71 Z " Stretch="Fill" Stroke="White" StrokeThickness="0">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.499901,0.00462528" EndPoint="0.499901,0.822712">
									<GradientStop Color="#FF0049B6" Offset="0"/>
									<GradientStop Color="#FF8FE5FF" Offset="1"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
						<Path x:Name="MousePressed" Data="F1 M 620,198.71L 540,190.001L 700,190.001L 620,198.71 Z " Stretch="Fill" Opacity="0" Stroke="White" StrokeThickness="0.5">
							<Path.Fill>
								<LinearGradientBrush StartPoint="0.501,0.983" EndPoint="0.5,0.163">
									<GradientStop Color="#FF0049B6" Offset="0.321"/>
									<GradientStop Color="#FF8FE5FF" Offset="1"/>
								</LinearGradientBrush>
							</Path.Fill>
						</Path>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard x:Name="MouseOver1_BeginStoryboard" Storyboard="{StaticResource MouseOver1}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard x:Name="MouseOver_Rev_BeginStoryboard" Storyboard="{StaticResource MouseOver_Rev}"/>
						</EventTrigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.ExitActions>
								<RemoveStoryboard BeginStoryboardName="MousePressed_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="MousePressed_BeginStoryboard" Storyboard="{StaticResource MousePressed}"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="BigArrowRepeatButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="MouseEnter">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="Default">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Stretch}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static HorizontalAlignment.Center}"/>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="Default">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Stretch}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static VerticalAlignment.Center}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseLeave">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="Default">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static HorizontalAlignment.Stretch}"/>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="Default">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static VerticalAlignment.Stretch}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MousePressed">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Pressed1">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Default">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Path x:Name="Default" Data="F1 M 620,198.71L 540,190.001L 700,190.001L 620,198.71 Z " Stretch="Fill" Fill="{DynamicResource ArrowButtonBrush}" Height="8.709" VerticalAlignment="Stretch"/>
						<Path x:Name="Pressed1" Data="F1 M 620,198.71L 540,190.001L 700,190.001L 620,198.71 Z " Stretch="Fill" Fill="{DynamicResource TabSelectorBrush_normal}" Height="8.709" VerticalAlignment="Stretch" Opacity="0"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Storyboard="{StaticResource MouseEnter}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard x:Name="MouseLeave_BeginStoryboard" Storyboard="{StaticResource MouseLeave}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="ButtonBase.Click">
							<BeginStoryboard x:Name="MousePressed_BeginStoryboard" Storyboard="{StaticResource MousePressed}"/>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{x:Static Microsoft_Windows_Themes1:ClassicBorderDecorator.ClassicBorderBrush}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Microsoft_Windows_Themes1:ClassicBorderDecorator x:Name="ClassicBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="AltRaised" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
						<Path Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Microsoft_Windows_Themes1:ClassicBorderDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="BorderStyle" TargetName="ClassicBorder" Value="AltPressed"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="ScrollBarPageButtonBrush" Color="{StaticResource {x:Static SystemColors.ControlLightLightColorKey}}" Opacity="0.5"/>
	<Style x:Key="VerticalScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle x:Name="PageButtonBackground" Fill="Transparent"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="PageButtonBackground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle x:Name="PageButtonBackground" Fill="Transparent"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="PageButtonBackground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MenuUpdownScroll" TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="0.137*"/>
							<RowDefinition Height="0.725*"/>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="0.138*"/>
						</Grid.RowDefinitions>
						<Viewbox Stretch="Fill">
							<RepeatButton Content="RepeatButton" HorizontalAlignment="Stretch" Height="8.709" Margin="0" Style="{DynamicResource BigArrowRepeatButton}" VerticalAlignment="Stretch" Width="160" RenderTransformOrigin="0.5,0.5">
								<RepeatButton.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleY="-1" ScaleX="1"/>
										<SkewTransform AngleY="0" AngleX="0"/>
										<RotateTransform Angle="0"/>
										<TranslateTransform/>
									</TransformGroup>
								</RepeatButton.RenderTransform>
							</RepeatButton>
						</Viewbox>
						<Viewbox Grid.Row="2" Stretch="Fill">
							<RepeatButton Content="RepeatButton" HorizontalAlignment="Stretch" Height="8.709" Margin="0" Style="{DynamicResource BigArrowRepeatButton}" VerticalAlignment="Stretch" Width="160"/>
						</Viewbox>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="MinWidth" Value="0"/>
				<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Grid Background="{TemplateBinding Background}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									<ColumnDefinition Width="0.00001*"/>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Grid.ColumnDefinitions>
								<Viewbox Stretch="Fill">
									<RepeatButton Content="M 0 4 L 4 8 L 4 0 Z" Command="{x:Static ScrollBar.LineLeftCommand}" MinHeight="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" Style="{StaticResource ScrollBarLineButtonStyle}" Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Viewbox>
								<Rectangle Grid.Column="1" Fill="{StaticResource ScrollBarPageButtonBrush}"/>
								<Track x:Name="PART_Track" Grid.Column="1">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButtonStyle}"/>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButtonStyle}"/>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumb}"/>
									</Track.Thumb>
								</Track>
								<Viewbox Grid.Column="2" Stretch="Fill">
									<RepeatButton Content="M 0 0 L 0 8 L 4 4 Z" Command="{x:Static ScrollBar.LineRightCommand}" MinHeight="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" Style="{StaticResource ScrollBarLineButtonStyle}" Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Viewbox>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="MenuScroller_2" TargetType="{x:Type ItemsControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ItemsControl}">
					<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.05*"/>
							<ColumnDefinition Width="0.9*"/>
							<ColumnDefinition Width="0.05*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.029*"/>
							<RowDefinition Height="0.139*"/>
							<RowDefinition Height="0.032*"/>
							<RowDefinition Height="0.606*"/>
							<RowDefinition Height="0.027*"/>
							<RowDefinition Height="0.136*"/>
							<RowDefinition Height="0.031*"/>
						</Grid.RowDefinitions>
						<Path Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF032339" Fill="#FF032339" Data="F1 M 520,150L 619.834,140L 720,150L 719.834,190L 619.834,200L 519.834,190L 520,150 Z " HorizontalAlignment="Stretch" Grid.RowSpan="7" Grid.ColumnSpan="3"/>
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.RowSpan="1" Grid.Row="3" Grid.Column="1"/>
						<ScrollBar Grid.Column="1" Grid.Row="1" Style="{DynamicResource MenuUpdownScroll}" VerticalAlignment="Stretch" Grid.RowSpan="5" Margin="0" Width="Auto"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--End of section of newely added resources-->
	
	
	<!--The Color for the Background of Main Window-->
	<!--The Color for the Main Window's border brush-->
	<!--The Color Resources for UpperDropDown option button forground-->
	<SolidColorBrush x:Key="UpDropDownTextColor" Color="#FF3A72FF" PresentationOptions:Freeze="True"/>
	<!--The Color Resources for UpperDropDown buttons Background-->
	<!--The Color Resources for Line & Circlular paths on Mani UI-->
	<LinearGradientBrush x:Key="PathsFillColor" EndPoint="0.5,1" StartPoint="0.5,0" PresentationOptions:Freeze="True">
				<LinearGradientBrush.RelativeTransform>
					<TransformGroup>
						<ScaleTransform CenterY="0.5" CenterX="0.5"/>
						<SkewTransform CenterY="0.5" CenterX="0.5"/>
						<RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
						<TranslateTransform/>
					</TransformGroup>
				</LinearGradientBrush.RelativeTransform>
				<GradientStop Color="#FF0A0AEF" Offset="0"/>
				<GradientStop Color="White" Offset="1"/>
				<GradientStop Color="#FF0A0AEF" Offset="0.5"/>
				<GradientStop Color="White" Offset="0.5"/>
	</LinearGradientBrush>
	<!--The Color Resources for Upper & Lower Toolbar on Main UI-->
	<!--Color resources for the Upper Video message box -->
	<!--Color Resources for the Drop Down lists on Main UI-->
	<SolidColorBrush x:Key="DropDownListSelectedBackColor" Color="#FF7DBCF5" PresentationOptions:Freeze="True" Opacity="0.75"/>
	<SolidColorBrush x:Key="DropDownListSelectedForeColor" Color="#FF001D78" PresentationOptions:Freeze="True"/>
	<SolidColorBrush x:Key="DropDownListForeColor" Color="Blue" PresentationOptions:Freeze="True"/>
	<!--The Color resource that defines the color for the foreground of the Upper toolbars-->
	<SolidColorBrush x:Key="UpperLowerMainToolbarTextcolor" Color="Blue" PresentationOptions:Freeze="True"/>
   <!--The Color resource that defines the color for area just surrounding the Toolbars in Main UI-->
	<!--The Color resource that defines the MouseOver color for the Upper Main toolbar(draw,Crosshair etc)-->
	<!--The Color resource that defines the Background color for the Upper Main toolbar(draw,Crosshair etc)-->
	<!--When Mouse is over Main Toolbar(draw,Crosshair etc) this shows the color of the Forground-->
	<!--The Color Resources for all child windows & separate panels-->
	 <!--The color for the Drop down lists-->
	<!--Button colors for Buttons,ToggleButtons  & RadioButtons-->
	<LinearGradientBrush x:Key="ButtonBackcolor" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
		<GradientStop Color="#FF1CA5FF" Offset="0.396"/>
		<GradientStop Color="#FFCBEBFF" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonBorderColor" Color="#660000FF" PresentationOptions:Freeze="True"/>
	<!--Toolbar colors-->
	<!--Color Resource for the Context menu backcolor-->
	<!---//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
		
	<!--//////////////////////////////////////The styles & templates for UI controls///////////////////////////////////////////////////////////////////-->
	
	<!--The style for the Upper/Down ToolbarRadiobuttons NO Background & BorderBrush-->
	<!--Draw,Crosshair,DXF,Rcad toolbar button templates.ScrToolbar means Scrollable toolbar-->
	<!--Base Template for all toolbar radio & Toggle buttons-->
	<!--Normal button template It is base template for all Buttons-->
	<Style x:Key="NormalGenericButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border  x:Name="_base" Margin="0" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="0.5*"/>
								<RowDefinition Height="0.5*"/>
							</Grid.RowDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="00:00:00.3000000"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard >
											<!--DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames-->
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>	
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="_mouseover" Margin="0"  Grid.RowSpan="2" Opacity="1" CornerRadius="{Binding CornerRadius, ElementName=_base}" OpacityMask="{x:Null}" Background="#FFFFBF7D" Visibility="Hidden"/>
							<Border x:Name="_Checked" Margin="0"  Grid.RowSpan="2" Opacity="1" CornerRadius="{Binding CornerRadius, ElementName=_base}" OpacityMask="{x:Null}" Background="#FFABFF7D" Visibility="Hidden"/>
							<Border x:Name="_midgloss" Margin="0"  Grid.RowSpan="2" CornerRadius="{Binding CornerRadius, ElementName=_base}" Visibility="Hidden">
								<Border.Background>
									<RadialGradientBrush RadiusY="1.5" RadiusX="1">
										<GradientStop Offset="1" Color="#FFFB700E"/>
										<GradientStop Color="#00FB700E"/>
										<GradientStop Color="#99FB700E" Offset="0.675"/>
									</RadialGradientBrush>
								</Border.Background>
							</Border>
							<Border ClipToBounds="True" x:Name="_upgloss" Margin="0"  BorderThickness="0" Background="#99FFFFFF" CornerRadius="5,5,0,0" Opacity="0.78" OpacityMask="{x:Null}"/>
							<Border ClipToBounds="True" x:Name="_downgloss" Margin="0"  BorderThickness="0" Background="#59FFFFFF" CornerRadius="0,0,5,5" Opacity="0.725" OpacityMask="{x:Null}" Grid.Row="1"/>
							<!--<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2">-->
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="_mouseover" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Visibility" TargetName="_midgloss" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility" TargetName="_Checked" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<Style x:Key="NormalButton" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border  x:Name="_base" Margin="0" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="0.5*"/>
								<RowDefinition Height="0.5*"/>
							</Grid.RowDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="00:00:00.3000000"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard >
											<!--DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames-->
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>	
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="_mouseover" Margin="0"  Grid.RowSpan="2" Opacity="1" CornerRadius="{Binding CornerRadius, ElementName=_base}" OpacityMask="{x:Null}" Background="#FFFFBF7D" Visibility="Hidden"/>
							<Border x:Name="_midgloss" Margin="0"  Grid.RowSpan="2" CornerRadius="{Binding CornerRadius, ElementName=_base}" Visibility="Hidden">
								<Border.Background>
									<RadialGradientBrush RadiusY="1.5" RadiusX="1">
										<GradientStop Offset="1" Color="#FFFB700E"/>
										<GradientStop Color="#00FB700E"/>
										<GradientStop Color="#99FB700E" Offset="0.675"/>
									</RadialGradientBrush>
								</Border.Background>
							</Border>
							<Border ClipToBounds="True" x:Name="_upgloss" Margin="0"  BorderThickness="0" Background="#99FFFFFF" CornerRadius="5,5,0,0" Opacity="0.78" OpacityMask="{x:Null}"/>
							<Border ClipToBounds="True" x:Name="_downgloss" Margin="0"  BorderThickness="0" Background="#59FFFFFF" CornerRadius="0,0,5,5" Opacity="0.725" OpacityMask="{x:Null}" Grid.Row="1"/>
							<!--<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2">-->
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="_mouseover" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Visibility" TargetName="_midgloss" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	<!--For Toolbar Radio Button-->
    <Style x:Key="NormalTextedButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  x:Name="_base" Margin="0" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.5*"/>
                                <RowDefinition Height="0.5*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00.3000000"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard >
                                            <!--DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames-->
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="_mouseover" Margin="0"  Grid.RowSpan="2" Opacity="1" CornerRadius="{Binding CornerRadius, ElementName=_base}" OpacityMask="{x:Null}" Background="#FFFFBF7D" Visibility="Hidden"/>
                            <Border x:Name="_midgloss" Margin="0"  Grid.RowSpan="2" CornerRadius="{Binding CornerRadius, ElementName=_base}" Visibility="Hidden">
                                <Border.Background>
                                    <RadialGradientBrush RadiusY="1.5" RadiusX="1">
                                        <GradientStop Offset="1" Color="#FFFB700E"/>
                                        <GradientStop Color="#00FB700E"/>
                                        <GradientStop Color="#99FB700E" Offset="0.675"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border ClipToBounds="True" x:Name="_upgloss" Margin="0"  BorderThickness="0" Background="#99FFFFFF" CornerRadius="5,5,0,0" Opacity="0.78" OpacityMask="{x:Null}"/>
                            <Border ClipToBounds="True" x:Name="_downgloss" Margin="0"  BorderThickness="0" Background="#59FFFFFF" CornerRadius="0,0,5,5" Opacity="0.725" OpacityMask="{x:Null}" Grid.Row="1"/>
                            <TextBlock Text="{TemplateBinding Content}" TextAlignment="Center" TextWrapping="Wrap" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="_mouseover" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="_midgloss" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--For Toolbar Toggle Button-->
	<Style x:Key="ScrToolbar_ToggButton" TargetType="{x:Type ToggleButton}">
		<Style.BasedOn>
<!--Base Template for all toolbar radio & Toggle buttons-->
			<Style TargetType="{x:Type ContentControl}">
				<Setter Property="Background" Value="{x:Null}"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="1,1,1,1"/>
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="BorderBrush" Value="{x:Null}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ContentControl}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="0.5*"/>
									<RowDefinition Height="0.5*"/>
								</Grid.RowDefinitions>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="00:00:00.3000000"/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="MouseOver">
											<Storyboard >
											<!--DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames-->
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Pressed">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Disabled"/>	
									</VisualStateGroup>
									<VisualStateGroup x:Name="FocusStates">
										<VisualState x:Name="Focused"/>
										<VisualState x:Name="Unfocused"/>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Border x:Name="_base" BorderThickness="{TemplateBinding BorderThickness}" Margin="0" 
									CornerRadius="{Binding (AttachedProp:AttachedCorner.Corner), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}}"
									Background="{TemplateBinding Background}" Grid.RowSpan="2" BorderBrush="{TemplateBinding BorderBrush}"/>
								<Border x:Name="_mouseover" Margin="0" CornerRadius="{Binding CornerRadius, ElementName=_base}" Grid.RowSpan="2" Opacity="0">
									<Border.OpacityMask>
										<RadialGradientBrush>
											<GradientStop Color="White" Offset="0.248"/>
											<GradientStop Color="#7FFFFFFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.OpacityMask>
									<Border.Background>
										<RadialGradientBrush RadiusY="1.5" RadiusX="1" GradientOrigin="0.5,0.9">
											<GradientStop Color="#97000000" Offset="0.55"/>
											<GradientStop Color="#3FFFFFFF"/>
											<GradientStop Color="#7FC4C4C4" Offset="0.32"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
								<Border x:Name="_midgloss" Margin="0" CornerRadius="{Binding CornerRadius, ElementName=_base}" Grid.RowSpan="1" Background="#0C000000" Grid.Row="1"/>
								<Border x:Name="_upGloss" Margin="0" CornerRadius="{Binding CornerRadius, ElementName=_base}" Grid.RowSpan="1" Background="#0DFFFFFF" Grid.Row="0"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.BasedOn>
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Background" Value="#FFFFC7A3"/>
				
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--For Toolbar Normal Button-->
	<!--DropDownList Toggle Button Template-->
	<Style x:Key="DropDownList_ToggButton">
		
	</Style>
	<!--Button template-->
	<Style x:Key="SimpleNormalButton" TargetType="{x:Type Button}" BasedOn="{StaticResource NormalButton}">
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColor}"/>
	</Style>
	<!--Rounded Toggle button-->
	<!--Rounded Radio button-->
	<Style x:Key="RoundedRadioButton">
		
	</Style>
	<!--Textbox template-->
	<!--Scrollbar template-->
	<Style x:Key="ScrollbarStyle">
		
	</Style>
	<!--For Repeat buttons-->
	<Style x:Key="NormalRepeatButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="Background" Value="{DynamicResource ButtonBackcolor}"/>
			<Setter Property="Padding" Value="3"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Grid >
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver">
											<VisualTransition.GeneratedEasingFunction>
												<CubicEase EasingMode="EaseOut"/>
											</VisualTransition.GeneratedEasingFunction>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
											<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal" d:IsOptimized="True"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
										
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
								
								
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="normal" Fill="{TemplateBinding Background}"  Stroke="{TemplateBinding BorderBrush}" RadiusY="6" RadiusX="6"/>
							<Rectangle x:Name="over"  Opacity="0" Stroke="{TemplateBinding BorderBrush}" RadiusY="6" RadiusX="6"/>
							<Rectangle x:Name="_gloss"  Opacity="1" RadiusY="6" RadiusX="6">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#37FFFFFF" Offset="0"/>
										<GradientStop Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<ContentPresenter Opacity="{TemplateBinding Opacity}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
							
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.4"></Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	<!--Upper About button template-->
	<!--Group Box style for panels with headers-->
	<!--Border Style for the Child windows owned by main form-->
	<!--Another Panel style-->
	<!--The Style for the Drop Down Button like MCS,mm/Inches,Mag levels in Main UI-->
	<!--The Style for the Drop down ListBox items like for MCS/UCS Dropdown-->
	<Style x:Key="DropDownListBoxItem" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="{x:Null}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" SnapsToDevicePixels="true" BorderThickness="0,1,0,1" Padding="{TemplateBinding Padding}" Margin="0,5">
							<Grid Background="#02FFFFFF">
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
									<StackPanel.RenderTransform>
										<TransformGroup>
											<TranslateTransform X="0" Y="0" x:Name="contentTranslate"/>
										</TransformGroup>
									</StackPanel.RenderTransform>
									<TextBlock x:Name="con" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" 
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1,0,0,0" FontWeight="Bold" FontSize="{TemplateBinding FontSize}">
									</TextBlock>
								</StackPanel>
							
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource DropDownListSelectedForeColor}"/>
						</Trigger>
							<Trigger Property="IsSelected" Value="true">
							<Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource DropDownListSelectedForeColor}"/>
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource DropDownListSelectedBackColor}"/>
								<Setter Property="TextBlock.Foreground" TargetName="con" Value="{DynamicResource DropDownListSelectedForeColor}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource DropDownListSelectedBackColor}"/>
								<Setter Property="TextBlock.Foreground" TargetName="con" Value="{DynamicResource DropDownListSelectedForeColor}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	<!--The Dropdown style of Checkable items for the Select DXF button in DXF Toolbar-->
	<Style x:Key="DropDownListBoxCheckedItem" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="{x:Null}"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" SnapsToDevicePixels="true" BorderThickness="0,1,0,1" Padding="{TemplateBinding Padding}">
							<Grid Background="#02FFFFFF">
								<StackPanel Orientation="Horizontal">
									<StackPanel.RenderTransform>
										<TransformGroup>
											<TranslateTransform X="0" Y="0" x:Name="contentTranslate"/>
										</TransformGroup>
									</StackPanel.RenderTransform>
									<ContentPresenter  x:Name="con" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Content="{TemplateBinding Content}" 
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1,0,0,0">
									</ContentPresenter>
								</StackPanel>
							
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource PathsFillColor}"/>
						</Trigger>

					   
							<Trigger Property="IsSelected" Value="true">
							<Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource PathsFillColor}"/>
							<Setter Property="Background" TargetName="Bd" Value="#FFFFC7A3"/>
								<Setter Property="TextBlock.Foreground" TargetName="con" Value="White"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="TextBlock.Foreground" TargetName="con" Value="White"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	<!--Style for the Tab Controls-->
	<!--Style For the Tab Item control-->
	<!--Style for the circular button defined in Lighting control & other panels-->
	<!--Base Style for ShapeList buttons-->
	<!--Style for the ShapeList Toggle button-->
	<!--Style for the DRO Button-->
	<!--Style for the DRO Button = by R.A.N.-->
	<Style x:Key="DRO_Button" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#F3F3F3" Offset="0"/>
					<GradientStop Color="#EBEBEB" Offset="0.5"/>
					<GradientStop Color="#DDDDDD" Offset="0.5"/>
					<GradientStop Color="#CDCDCD" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#FF707070"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnMouseEnter1">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OnPressedColor">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="OnPressedColor">
								<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="OnPressedColor">
								<EasingColorKeyFrame KeyTime="0" Value="Black"/>
								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="White"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseLeave1">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OnPressedColor">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseLeftButtonDown1">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OnPressedColor">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
								<EasingThicknessKeyFrame KeyTime="0" Value="10"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0"/>
							</ThicknessAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnMouseLeftButtonUp1">
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
								<EasingThicknessKeyFrame KeyTime="0" Value="0"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="10"/>
							</ThicknessAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OnPressedColor">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnClick1">
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentHolder">
								<EasingThicknessKeyFrame KeyTime="0" Value="0"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="10"/>
								<EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0"/>
							</ThicknessAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OnPressedColor">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="grid">
						<Grid.RowDefinitions>
							<RowDefinition Height="0.548*"/>
							<RowDefinition Height="0.452*"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.238*"/>
							<ColumnDefinition Width="0.762*"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="BaseColor" Fill="{DynamicResource ToolbarButtonNormalColorBrush}" RadiusY="4" RadiusX="4" StrokeLineJoin="Round" Grid.ColumnSpan="2" Grid.RowSpan="2" Stroke="#FF87BAFF"/>
						<Rectangle x:Name="OnPressedColor" Fill="{DynamicResource BlueButtonOverBrush}" RadiusY="4" RadiusX="4" Stroke="White" StrokeLineJoin="Round" Grid.ColumnSpan="2" Opacity="0" Grid.RowSpan="2" StrokeThickness="1"/>
						<Viewbox x:Name="DROHolder" Grid.ColumnSpan="1" Grid.Column="1" Margin="0,0,4,0" Grid.RowSpan="2">
							<Border BorderThickness="1" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="12.718" Padding="0" CornerRadius="2">
								<!--<TextBlock TextWrapping="Wrap" Text="{Binding (local:AttachedDROText.DROText), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Foreground="{Binding Path=(local:AttachedDROText.DROTextFG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" TextAlignment="Right" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" FontSize="5" FontFamily="/Rapid-I 5v2;component/Fonts/#Segoe UI" Background="{Binding Path=(local:AttachedDROText.DROTextBG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Margin="0" Height="5"/>-->
								<!--<TextBlock TextWrapping="Wrap" Text="-888.8888" Foreground="White" TextAlignment="Right" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" FontSize="10.667" FontFamily="/Rapid-I 5v2;component/Fonts/#Segoe UI" Background="Black" Margin="0" Height="Auto"/>-->
								<TextBlock TextWrapping="Wrap" Text="{Binding (AttachedProp:AttachedDROProperties.DROText), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" 
										   Foreground="{Binding (AttachedProp:AttachedDROProperties.DROTextFG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" 
										   TextAlignment="Right" VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="9.333" FontFamily="/Rapid-I 5v2;component/Fonts/#Segoe UI" 
										   Background="{Binding (AttachedProp:AttachedDROProperties.DROTextBG), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" 
										   Margin="0" Height="14" Width="50"/>
							</Border>
						</Viewbox>
						<Viewbox x:Name="ContentHolder" Height="Auto" Width="37.602" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Grid.RowSpan="2">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="ButtonBase.Click">
							<BeginStoryboard x:Name="OnClick1_BeginStoryboard" Storyboard="{StaticResource OnClick1}"/>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style for the Upper buttons-->
	<Style x:Key="UpperButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColor}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnM_E">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_Highlighted">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnM_L">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_Highlighted">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.5*"/>
							<RowDefinition Height="0.5*"/>
						</Grid.RowDefinitions>

						<Ellipse x:Name="ellipse" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" Fill="{TemplateBinding Background}" Grid.RowSpan="2"/>
						<Ellipse x:Name="ellipse_Highlighted" StrokeThickness="2" Grid.RowSpan="2" Opacity="0">
							<Ellipse.Fill>
								<RadialGradientBrush>
									<GradientStop Color="#A5FFFFFF" Offset="0"/>
									<GradientStop Offset="0.5"/>
									<GradientStop Color="#A5FFFFFF" Offset="1"/>
								</RadialGradientBrush>
							</Ellipse.Fill>
						</Ellipse>

						<Border x:Name="_mouseover" Margin="0"  Grid.RowSpan="2" Opacity="1" CornerRadius="{Binding CornerRadius, ElementName=_base}" OpacityMask="{x:Null}" Background="{x:Null}"/>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="OnM_L_BeginStoryboard" Storyboard="{StaticResource OnM_L}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource OnM_E}"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style for the Upper Toggle buttons-->
	<Style x:Key="UpperToggButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColor}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border  x:Name="_base" Margin="0" CornerRadius="0" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="0.5*"/>
								<RowDefinition Height="0.5*"/>
							</Grid.RowDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="00:00:00.3000000"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard >
											<!--DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames-->
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_mouseover" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_midgloss" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
												<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
									<VisualState x:Name="Unfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Border x:Name="_mouseover" Margin="0"  Grid.RowSpan="2" Opacity="0" CornerRadius="{Binding CornerRadius, ElementName=_base}" OpacityMask="{x:Null}">
								<Border.Background>
									<RadialGradientBrush RadiusY="1.5" RadiusX="1" GradientOrigin="0.5,0.9">
										<GradientStop Color="#97000000" Offset="0.55"/>
										<GradientStop Color="#3FFFFFFF"/>
										<GradientStop Color="#7FC4C4C4" Offset="0.32"/>
									</RadialGradientBrush>
								</Border.Background>
							</Border>
							<Border x:Name="_midgloss" Margin="0"  Grid.RowSpan="2" Visibility="Hidden" CornerRadius="{Binding CornerRadius, ElementName=_base}">
								<Border.Background>
									<RadialGradientBrush RadiusY="1.5" RadiusX="1">
										<GradientStop Color="#7FFFFFFF" Offset="1"/>
										<GradientStop Color="#00565656"/>
									</RadialGradientBrush>
								</Border.Background>
							</Border>
							<Border ClipToBounds="True" x:Name="_upgloss" Margin="0"  BorderThickness="0" Background="#59FFFFFF" CornerRadius="0" Opacity="0.725" OpacityMask="{x:Null}"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->

	<!--/////////////////////////////////////////////////DATA TEMPLATES and OTHER TEMPLATES///////////////////////////////////////////////////////////////-->
	<!--DataTemplate to contain Image & Text as content-->
	<!--DataTemplate to contain Image & Text as content for Toggle Button-->
	<!--Data template for the Panel headers-->
	<DataTemplate x:Key="PanelHeaderTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="5"/>
				<ColumnDefinition Width="24"/>
				<ColumnDefinition Width="5"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Image Grid.Column="1" x:Name="img" Source="{Binding (AttachedProp:AttachedImage.Image), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}" 
				   HorizontalAlignment="Left" VerticalAlignment="Center"/>
			<TextBlock Grid.Column="3" FontWeight="Bold" FontSize="16" Text="{TemplateBinding Content}" 
				   HorizontalAlignment="Left"	VerticalAlignment="Center"/>
		</Grid>
	</DataTemplate>
	<!--Empty Focus Visual style for every control in UI-->
	<Style x:Key="EmptyFocusVisual" TargetType="{x:Type Control}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Control}">
					<Grid/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style for the Separator (vertical type)-->
	<Style x:Key="VerticalSeparator" TargetType="{x:Type Path}">
	 <Setter Property="StrokeThickness" Value="3"/>
	 <Setter Property="Data" Value="M2.0000001,2 L2.0000001,51.46766"/>
	 <Setter Property="Stroke" Value="{DynamicResource PathsFillColor}"/>
	</Style>
	<!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->



	<Style TargetType="{x:Type ContextMenu}">
		<Setter Property="HasDropShadow" Value="True"/>
		<Setter Property="FontSize" Value="12.5"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=ButtonBorderColor}"/>
		<Setter Property="Background" Value="{DynamicResource ResourceKey=ContextMenuBackColor}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" Background="{TemplateBinding Background}">
						<StackPanel IsItemsHost="True"
					  KeyboardNavigation.DirectionalNavigation="Cycle"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" Value="true">
							<Setter TargetName="MainBorder" Property="Padding" Value="0,3,0,3"/>
							<Setter TargetName="MainBorder" Property="CornerRadius" Value="7"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="ListItemStyle" TargetType="ListBoxItem">
		<Style.Resources>
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGreen"/>
			<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightBlue"/>
		</Style.Resources>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Foreground" Value="Red"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter><!---->
	</Style>
	<ControlTemplate x:Key="ToleranceControl" TargetType="{x:Type Slider}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.11*"/>
				<ColumnDefinition Width="0.79*"/>
				<ColumnDefinition Width="0.1*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="0.22*"/>
				<RowDefinition Height="0.565*"/>
				<RowDefinition Height="0.215*"/>
			</Grid.RowDefinitions>
			<Path x:Name="PART_SelectionRange" Data="M30,0L0,40 30,80 60,40z" Stretch="Fill" Stroke="Black" StrokeThickness="0" HorizontalAlignment="Stretch" Width="Auto" Grid.RowSpan="1" Fill="{DynamicResource YellowHighlighter}" Grid.Row="1"/>
			<Canvas Grid.ColumnSpan="3" Grid.Row="1"/>
			<Rectangle Grid.ColumnSpan="3" Grid.Row="1" Stroke="Black" StrokeThickness="0"/>
		</Grid>
	</ControlTemplate>
	<Style x:Key="TaggedHighlighted_TextBox" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="FocusEnabled">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HighlightBorder">
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocusDisabled">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HighlightBorder">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid Margin="0" Height="{TemplateBinding Height}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="26.6"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Border x:Name="HighlightBorder" CornerRadius="7" Opacity="0" Grid.ColumnSpan="2" Visibility="Hidden" Background="{DynamicResource GlowBodyBrush_Dark}" BorderThickness="1" BorderBrush="{DynamicResource GlowBorder}"/>
						<Border x:Name="Base_Border" BorderThickness="0,1,1,1" Margin="0,2,2,2" CornerRadius="0,5,5,0" Background="{TemplateBinding Background}" Grid.ColumnSpan="1" BorderBrush="Black" Grid.Column="1"/>
						<Border BorderThickness="1,1,0,1" Margin="2,2,0,2" CornerRadius="5,0,0,5" Background="{TemplateBinding BorderBrush}" BorderBrush="Black">
							<Viewbox Margin="2">
								<Label Content="{TemplateBinding Tag}" HorizontalAlignment="Right" Width="Auto" Foreground="{DynamicResource BorderBrush_Title}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" FontFamily="Arial Rounded MT Bold" FontWeight="Normal" FontSize="16" Height="Auto" VerticalAlignment="Center" Padding="0" Background="{x:Null}"/>
							</Viewbox>
						</Border>
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" Margin="0,3,6,3" VerticalContentAlignment="Center" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontFamily="{TemplateBinding FontFamily}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<!--<EventTrigger RoutedEvent="FocusManager.GotFocus">
							<BeginStoryboard Storyboard="{StaticResource FocusEnabled}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="FocusManager.LostFocus">
							<BeginStoryboard x:Name="FocusDisabled_BeginStoryboard1" Storyboard="{StaticResource FocusDisabled}"/>
						</EventTrigger>-->
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="FocusDisabled_BeginStoryboard" Storyboard="{StaticResource FocusDisabled}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource FocusEnabled}"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TaggedHighlighted_TextBox1" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="FocusEnabled">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HighlightBorder">
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocusDisabled">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HighlightBorder">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid Margin="0" Height="{TemplateBinding Height}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="26.6"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Border x:Name="HighlightBorder" CornerRadius="7" Opacity="0" Grid.ColumnSpan="2" Visibility="Hidden" Background="{DynamicResource GlowBodyBrush_Dark}" BorderThickness="1" BorderBrush="{DynamicResource GlowBorder}"/>
						<Border x:Name="Base_Border" BorderThickness="0,1,1,1" Margin="0,2,2,2" CornerRadius="0,5,5,0" Background="{TemplateBinding Background}" Grid.ColumnSpan="1" BorderBrush="Black" Grid.Column="1"/>
						<Border BorderThickness="1,1,0,1" Margin="2,2,0,2" CornerRadius="5,0,0,5" Background="{TemplateBinding BorderBrush}" BorderBrush="Black">
							<Viewbox Margin="2">
								<Label Content="{TemplateBinding Tag}" HorizontalAlignment="Right" Width="Auto" Foreground="White" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" FontFamily="Arial Rounded MT Bold" FontWeight="Normal" FontSize="16" Height="Auto" VerticalAlignment="Center" Padding="0" Background="{x:Null}"/>
							</Viewbox>
						</Border>
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" Margin="0,3,6,3" VerticalContentAlignment="Center" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontFamily="{TemplateBinding FontFamily}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<!--<EventTrigger RoutedEvent="FocusManager.GotFocus">
							<BeginStoryboard Storyboard="{StaticResource FocusEnabled}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="FocusManager.LostFocus">
							<BeginStoryboard x:Name="FocusDisabled_BeginStoryboard1" Storyboard="{StaticResource FocusDisabled}"/>
						</EventTrigger>-->
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="FocusDisabled_BeginStoryboard" Storyboard="{StaticResource FocusDisabled}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource FocusEnabled}"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TaggedHighlighted_Larger" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="FocusEnabled"/>
						<Storyboard x:Key="FocusDisabled"/>
					</ControlTemplate.Resources>
					<Grid Margin="0" Height="{TemplateBinding Height}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="33"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Border x:Name="Base_Border" BorderThickness="0,1,1,1" CornerRadius="0,5,5,0" Background="{DynamicResource TextBoxBGBrush}" Grid.ColumnSpan="1" Grid.Column="1" BorderBrush="Black"/>
						<Border BorderThickness="1,1,0,1" CornerRadius="5,0,0,5" Background="{TemplateBinding BorderBrush}" BorderBrush="Black">
							<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Tag}" FontFamily="Arial Rounded MT Bold" FontSize="10.667" VerticalAlignment="Center" Margin="1,0,0,0" Foreground="{DynamicResource BorderBrush_Title}"/>
						</Border>
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" Margin="0,0,4,0" VerticalContentAlignment="Center" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<!--<EventTrigger RoutedEvent="FocusManager.GotFocus">
							<BeginStoryboard Storyboard="{StaticResource FocusEnabled}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="FocusManager.LostFocus">
							<BeginStoryboard x:Name="FocusDisabled_BeginStoryboard1" Storyboard="{StaticResource FocusDisabled}"/>
						</EventTrigger>-->
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="FocusDisabled_BeginStoryboard" Storyboard="{StaticResource FocusDisabled}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource FocusEnabled}"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="GB_ToolStyle_NoComboBox" TargetType="{x:Type GroupBox}">
		<Setter Property="BorderBrush" Value="#D5DFE5"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnMouseLeftButtonDown1"/>
						<Storyboard x:Key="TextBoxinFocus"/>
					</ControlTemplate.Resources>
					<Grid x:Name="LightingGrid" SnapsToDevicePixels="true">
						<Grid.Effect>
							<DropShadowEffect Opacity="0.6"/>
						</Grid.Effect>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="5"/>
							<ColumnDefinition Width="Auto" MinWidth="100"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" MinHeight="21.625"/>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border BorderBrush="{TemplateBinding Foreground}" Grid.ColumnSpan="4" Grid.RowSpan="2" Background="{TemplateBinding Background}" CornerRadius="8" BorderThickness="1,0,1,1"/>
						<Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1,1,1,0" Grid.ColumnSpan="4" Grid.RowSpan="1" Background="{TemplateBinding BorderBrush}" CornerRadius="8,8,0,0">
							<Border BorderThickness="1" CornerRadius="0" VerticalAlignment="Stretch" Margin="0,0,0,0.892" HorizontalAlignment="Left" Width="Auto">
								<Border.Effect>
									<DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
								</Border.Effect>
								<TextBlock TextWrapping="Wrap" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Header}" Foreground="White" FontWeight="Normal" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontFamily="{TemplateBinding FontFamily}" Margin="10,3,0,3" VerticalAlignment="Center" HorizontalAlignment="Left"/>
							</Border>
						</Border>
						<ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="onMouseEnter"/>
						<Storyboard x:Key="onMouseLeave"/>
					</ControlTemplate.Resources>
					<Grid Height="Auto">
						<Border x:Name="border" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="0,5,0,0" Background="{DynamicResource GlowBorder}" Opacity="0.1"/>
						<Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="{DynamicResource BorderBrush_Title}" Fill="{DynamicResource BorderBrush_Title}" Data="F1 M 5,46L 15,46L 10,42L 5,46 Z " Height="5" VerticalAlignment="Center" HorizontalAlignment="Center" Width="11"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="border" Value="0.4"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="border" Value="0.8"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NUD_UpButtonTemplate" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type RepeatButton}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
	</Style>
	<Style x:Key="NUD_DownBtnTemplate" TargetType="{x:Type RepeatButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnMouseEnter"/>
						<Storyboard x:Key="OnMouseLeave"/>
					</ControlTemplate.Resources>
					<Grid>
						<Border x:Name="border" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="0,0,5,0" Opacity="0.1" Background="{DynamicResource GlowBorder}"/>
						<Path Stretch="Fill" StrokeLineJoin="Round" Fill="{DynamicResource BorderBrush_Title}" Data="F1 M 18.3807,38L 28.3807,38L 23.3807,42L 18.3807,38 Z " Height="5" VerticalAlignment="Center" HorizontalAlignment="Center" Width="11" Stroke="{DynamicResource BorderBrush_Title}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="border" Value="0.4"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="border" Value="0.8"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PictureTextButton" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="#F4F4F4"/>
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="IsSelectedBoard">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightBG">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="IsDeselected">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightBG">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseEnter">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightBG">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.3"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ShadingHighlight">
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseLeave">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightBG">
								<SplineDoubleKeyFrame KeyTime="0" Value="0.3"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ShadingHighlight">
								<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="LayoutRoot">
						<Grid.RowDefinitions>
							<RowDefinition Height="0.158*"/>
							<RowDefinition Height="0.548*"/>
							<RowDefinition Height="0.149*"/>
							<RowDefinition Height="0.145*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked"/>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ShadingHighlight" BorderThickness="1" CornerRadius="10" Grid.RowSpan="4" Background="{DynamicResource GlowBodyBrush_Dark}" BorderBrush="{DynamicResource GlowBorder}" Opacity="0"/>
						<Border x:Name="NormalBG" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="8" Background="{TemplateBinding Background}" Margin="3" Grid.RowSpan="4"/>
						<Border x:Name="HighlightBG" BorderThickness="2" CornerRadius="8" Margin="0" Grid.RowSpan="4" Background="{DynamicResource TabSelectorBrush_Highlight}" BorderBrush="Black" Opacity="0"/>
						<Border x:Name="PicHolder" BorderBrush="Black" BorderThickness="1" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" Margin="20,0,20,4" Background="{DynamicResource PanelBackground}" Grid.Row="1">
							<Viewbox>
								<ContentPresenter Height="Auto"/>
							</Viewbox>
						</Border>
						<Border x:Name="NameHolder" BorderBrush="Black" BorderThickness="1" Grid.Row="2" Background="White" Margin="20,0">
							<Viewbox>
								<TextBlock TextWrapping="Wrap" Text="{TemplateBinding Tag}" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}"/>
							</Viewbox>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="HighlightBG" Value="0.3"/>
							<Setter Property="Opacity" TargetName="ShadingHighlight" Value="0.5"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Opacity" TargetName="HighlightBG" Value="1"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="False">
							<Setter Property="Opacity" TargetName="HighlightBG" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="DG_Background" Color="#4C000000"/>
	<LinearGradientBrush x:Key="CloseButtonBrush_BG" EndPoint="1,1" StartPoint="0,0">
		<GradientStop Color="#FFFFAAAA" Offset="0"/>
		<GradientStop Color="#FFB64040" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="CloseButtonBrush_Border" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFB64040" Offset="0"/>
		<GradientStop Color="#FFF59D9D" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="LightButtonOnBrush_BG" EndPoint="1,1" StartPoint="0,0">
		<GradientStop Color="#FFAAFFAA" Offset="0"/>
		<GradientStop Color="#FF40B640" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="LightButtonOnBrush_Border" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF40B640" Offset="0"/>
		<GradientStop Color="#FF9DF59D" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="Tagged_Double_TextBox" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="FocusEnabled">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HighlightBorder">
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocusDisabled">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HighlightBorder">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid Margin="0" Height="{TemplateBinding Height}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="26.6"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto" MinWidth="44.799"/>
						</Grid.ColumnDefinitions>
						<Border x:Name="HighlightBorder" CornerRadius="7" Opacity="0.5" Grid.ColumnSpan="3" Visibility="Hidden" Background="{DynamicResource GlowBodyBrush_Dark}" BorderThickness="1" BorderBrush="{DynamicResource GlowBorder}"/>
						<Border x:Name="Base_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="3" CornerRadius="5" Background="{DynamicResource TextBoxBGBrush}" Grid.ColumnSpan="3"/>
						<Border BorderThickness="1,1,0,1" Margin="2,2,0,2" CornerRadius="5,0,0,5" Background="{TemplateBinding BorderBrush}">
							<Viewbox Margin="2">
								<Label Content="{TemplateBinding Tag}" HorizontalAlignment="Right" Width="Auto" Foreground="White" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" FontFamily="Arial Rounded MT Bold" FontWeight="Normal" FontSize="16" Height="Auto" VerticalAlignment="Center" Padding="0"/>
							</Viewbox>
						</Border>
						<Border BorderBrush="{x:Null}" BorderThickness="1" HorizontalAlignment="Stretch" Grid.Column="2" Margin="0,3,3,3" Background="{TemplateBinding BorderBrush}" CornerRadius="0,5,5,0">
							<Viewbox Margin="2,1">
								<TextBlock Height="Auto" TextWrapping="Wrap" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding ToolTip}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}" Foreground="White" FontSize="{TemplateBinding FontSize}"/>
							</Viewbox>
						</Border>
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" Margin="0,3,3,3" VerticalContentAlignment="Center" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<!--<EventTrigger RoutedEvent="FocusManager.GotFocus">
							<BeginStoryboard Storyboard="{StaticResource FocusEnabled}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="FocusManager.LostFocus">
							<BeginStoryboard x:Name="FocusDisabled_BeginStoryboard1" Storyboard="{StaticResource FocusDisabled}"/>
						</EventTrigger>-->
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="FocusDisabled_BeginStoryboard" Storyboard="{StaticResource FocusDisabled}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource FocusEnabled}"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TabItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
	<LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#EAF6FD" Offset="0.15"/>
		<GradientStop Color="#D9F0FC" Offset=".5"/>
		<GradientStop Color="#BEE6FD" Offset=".5"/>
		<GradientStop Color="#A7D9F5" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
	<SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
	<SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
	<SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
	<Style x:Key="Tab_Item_Style1" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Padding" Value="6,1,6,1"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid SnapsToDevicePixels="true">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd_MouseOver">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Bd_Highlighted">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="viewbox">
											<EasingThicknessKeyFrame KeyTime="0" Value="4"/>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Bd" CornerRadius="5,0,0,5" Margin="2,4,4,4" BorderBrush="{x:Null}" Background="{x:Null}"/>
						<Border x:Name="Bd_MouseOver" CornerRadius="5,0,0,5" Margin="2,4,0,4" BorderBrush="Black" Background="White" Opacity="0"/>
						<Border x:Name="Bd_Highlighted" CornerRadius="5,0,0,5" BorderThickness="1,1,0,1" Visibility="Hidden" Margin="0,2" Background="White" BorderBrush="Black"/>
						<Viewbox x:Name="viewbox" Margin="4,8,8,8" HorizontalAlignment="Right" VerticalAlignment="Center">
							<TextBlock TextWrapping="Wrap" Text="{TemplateBinding Header}" Margin="0,2,0,4" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold"/>
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="false"/>
								<Condition Property="IsMouseOver" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
						</MultiTrigger>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Top"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-2,-1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-1,-2,-2"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-1,-2"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-1,-2,-2,-2"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
	<Style x:Key="ListBox_w_Label" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Grid Height="Auto" Width="Auto">
						<Grid.Effect>
							<DropShadowEffect Opacity="0.6"/>
						</Grid.Effect>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" MinHeight="22.793"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" CornerRadius="5,5,0,0" Background="{DynamicResource BorderBrush_Title}">
							<Border BorderBrush="Black" HorizontalAlignment="Left" VerticalAlignment="Center">
								<Border.Effect>
									<DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
								</Border.Effect>
								<TextBlock Margin="4,0,0,0" TextWrapping="Wrap" Text="{TemplateBinding Tag}" FontSize="11" Foreground="White"/>
							</Border>
						</Border>
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Padding="1" SnapsToDevicePixels="true" Grid.Row="1" CornerRadius="0,0,5,5" BorderThickness="1,0,1,1" Background="{DynamicResource PanelBackground}">
							<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Margin="1,0,1,2"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="gb_HeaderStyle_AutoHeighter" TargetType="{x:Type GroupBox}">
		<Setter Property="BorderBrush" Value="#D5DFE5"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnMouseLeftButtonDown1"/>
						<Storyboard x:Key="TextBoxinFocus"/>
					</ControlTemplate.Resources>
					<Grid x:Name="LightingGrid" SnapsToDevicePixels="true">
						<Grid.Effect>
							<DropShadowEffect Opacity="0.6"/>
						</Grid.Effect>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="8"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="6"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" MinHeight="29"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border BorderBrush="{TemplateBinding Foreground}" Grid.ColumnSpan="3" Grid.RowSpan="2" Background="{TemplateBinding Background}" CornerRadius="8" BorderThickness="1,0,1,1"/>
						<Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1,1,1,0" Grid.ColumnSpan="3" Grid.RowSpan="1" Background="{TemplateBinding BorderBrush}" CornerRadius="8,8,0,0">
							<Border BorderThickness="1" CornerRadius="0" VerticalAlignment="Stretch" Margin="0,0,0,0.892" HorizontalAlignment="Stretch" Width="Auto">
								<Border.Effect>
									<DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
								</Border.Effect>
								<TextBlock TextWrapping="Wrap" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Header}" Foreground="White" FontWeight="Normal" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontFamily="{TemplateBinding FontFamily}" Margin="10,3,0,3" VerticalAlignment="Center" HorizontalAlignment="Left"/>
							</Border>
						</Border>
						<ContentPresenter Grid.ColumnSpan="1" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
	<Style x:Key="EmptyCheckBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WrappedText_CheckBox" TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
						<BulletDecorator.Bullet>
							<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>
						</BulletDecorator.Bullet>
						<TextBlock TextWrapping="Wrap" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="DockingButton" TargetType="{x:Type CheckBox}">
		<Grid Width="Auto" Height="Auto">
			<Path Data="M 0,0 L 0,10 A 5,10,90,0,0,0,0 Z" StrokeThickness="0" HorizontalAlignment="Stretch" Height="Auto" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" Fill="{TemplateBinding Background}"/>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="0.2*"/>
					<RowDefinition Height="0.6*"/>
					<RowDefinition Height="0.2*"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.1*"/>
					<ColumnDefinition Width="0.6*"/>
					<ColumnDefinition Width="0.4*"/>
				</Grid.ColumnDefinitions>
				<Path x:Name="UncheckedArrow" Data="M0,0 L10,10 0,20" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="#FF024CFF" StrokeThickness="5" VerticalAlignment="Stretch" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Grid.Row="1" Grid.Column="1"/>
				<Path x:Name="CheckedArrow" Data="M10,0 L0,10 10,20" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="#FF024CFF" StrokeThickness="5" VerticalAlignment="Stretch" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Grid.Row="1" Grid.Column="1" Visibility="Visible"/>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="CheckedArrow" Property="Visibility" Value="Visible"/>
				<Setter TargetName="UncheckedArrow" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="False">
				<Setter TargetName="CheckedArrow" Property="Visibility" Value="Hidden"/>
				<Setter TargetName="UncheckedArrow" Property="Visibility" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!--Style for the Upper buttons-->
	<Style x:Key="TreeItemButton" TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColor}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.5*"/>
							<RowDefinition Height="0.5*"/>
						</Grid.RowDefinitions>

						<Border x:Name="_mouseover" Margin="0"  Grid.RowSpan="2" Opacity="1" OpacityMask="{x:Null}" Visibility="Hidden" CornerRadius="2" BorderBrush="#99A3ADFF" BorderThickness="1">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#0CA3E4FF" Offset="0"/>
									<GradientStop Offset="1" Color="#59A3E4FF"/>
									<GradientStop Color="#26A3E4FF" Offset="0.496"/>
									<GradientStop Offset="0.511" Color="#33A3E4FF"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="_mousepressed" Margin="0"  Grid.RowSpan="2" Opacity="1" OpacityMask="{x:Null}" Visibility="Hidden" CornerRadius="2" BorderBrush="#99A3ADFF" BorderThickness="1">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#0CA3E4FF" Offset="0"/>
									<GradientStop Offset="1" Color="#59A3E4FF"/>
									<GradientStop Color="#26A3E4FF" Offset="0.496"/>
									<GradientStop Offset="0.511" Color="#33A3E4FF"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2" Margin="3,0"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Visibility" TargetName="_mousepressed" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="_mouseover" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<LinearGradientBrush x:Key="EditPanelBackground" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFF7FBFF" Offset="0"/>
		<GradientStop Color="#FF9CD4FF" Offset="1"/>
	</LinearGradientBrush>

		<Path x:Key="LBlockIcon" Stretch="Fill" StrokeThickness="0.640004" StrokeLineJoin="Round" Stroke="#FF000000" Fill="#FF4A5047" Data="F1 M 26.7733,34.56L 31.5958,34.56L 31.5958,42.2589L 38.2268,42.2589L 38.2268,47.1141L 40.8533,47.1141L 40.8533,48.64L 38.2268,48.64L 36.935,48.64L 31.5958,48.64L 27.5484,48.64L 26.7733,48.64L 26.7733,34.56 Z " RenderTransformOrigin="0.5,0.5">
			<Path.RenderTransform>
				<TransformGroup>
					<ScaleTransform ScaleY="0.8" ScaleX="0.8"/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Path.RenderTransform>
		</Path>

		<Path x:Key="ConeIcon" Stretch="Fill" StrokeThickness="0.64" StrokeLineJoin="Round" Stroke="#FF000000" Fill="#FF969696" Data="F1 M 48,63.6L 48,69.76L 33.92,69.76L 33.92,63.6L 40.96,55.68L 48,63.6 Z " RenderTransformOrigin="0.5,0.5">
			<Path.RenderTransform>
				<TransformGroup>
					<ScaleTransform ScaleY="0.8" ScaleX="0.8"/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Path.RenderTransform>
		</Path>


		<ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type CheckBox}">
		<Grid>
			<Rectangle Fill="{DynamicResource EditPanelBackground}" Stroke="Black" StrokeThickness="0" RadiusX="2" RadiusY="2"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,2,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,6,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,10,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,14,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,18,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,22,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,26,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,30,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,34,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,38,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Rectangle Fill="{DynamicResource ButtonBackcolor}" Height="1.5" Margin="5,42,5,0" StrokeThickness="0" VerticalAlignment="Top" RadiusX="1" RadiusY="1"/>
			<Path Data="M0,3.375 C0,1.511039 1.790861,0 4,0 L21.228,0 C23.437139,0 25.228,1.511039 25.228,3.375 C25.228,5.238961 23.437139,6.75 21.228,6.75 L4,6.75 C1.790861,6.75 0,5.238961 0,3.375 z" Fill="{DynamicResource DropDownListSelectedForeColor}" Margin="16.937,17.514,-0.564,16.77" RenderTransformOrigin="0.5,0.5" Stretch="Fill" StrokeThickness="0" HorizontalAlignment="Stretch" Width="Auto" d:LayoutOverrides="HorizontalAlignment" >
				<Path.RenderTransform>
					<TransformGroup>
						<ScaleTransform ScaleX="-1"/>
						<SkewTransform/>
						<RotateTransform Angle="-30"/>
						<TranslateTransform/>
					</TransformGroup>
				</Path.RenderTransform>
			</Path>
			<Path Data="M0,3 L8,0 C8,0 6.2921438,1.7049145 6.2095141,3.2467158 6.151289,4.3331465 7.5866306,5.1732612 8,6 L8,6 0,3 z" Fill="{DynamicResource DropDownListSelectedForeColor}" Height="10.644" Margin="8.401,0,0,6.381" RenderTransformOrigin="0.5,0.5" Stretch="Fill" StrokeThickness="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="12.099" >
				<Path.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform/>
						<RotateTransform Angle="-30"/>
						<TranslateTransform X="0.11997425091103509" Y="0.447750000000001"/>
					</TransformGroup>
				</Path.RenderTransform>
			</Path>
			
			
		</Grid>
	</ControlTemplate>
	<Style x:Key="TabItem_Horiz" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FFF0F0F0" Offset="0"/>
					<GradientStop Color="#FFFFFFFF" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#FFACACAC"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
						<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="2,0" CornerRadius="4,4,0,0">
							<Border x:Name="innerBorder" BorderBrush="#E0FFFFFF" BorderThickness="1,1,1,0" Margin="0" Background="White" Opacity="0.2" CornerRadius="3,3,0,0"/>
						</Border>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FFECF4FC" Offset="0"/>
										<GradientStop Color="#FFDCECFC" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FFECF4FC" Offset="0"/>
										<GradientStop Color="#FFDCECFC" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FFECF4FC" Offset="0"/>
										<GradientStop Color="#FFDCECFC" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="mainBorder">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FFECF4FC" Offset="0"/>
										<GradientStop Color="#FFDCECFC" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
							<Setter Property="Background" TargetName="mainBorder" Value="#FFF0F0F0"/>
							<Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,-2,0,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,0,-2,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="0,-2,-2,-2"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Margin" Value="-2,-2,-2,0"/>
							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Lb_Item_2Mer" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="2,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Margin="0">
						<Grid HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="121*"/>
								<ColumnDefinition Width="50*"/>
							</Grid.ColumnDefinitions>
							<TextBlock HorizontalAlignment="Stretch" Height="Auto" Margin="4,0" TextWrapping="Wrap" VerticalAlignment="Center" Width="Auto" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}"/>
							<Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="4,2" VerticalAlignment="Stretch" Width="Auto" Fill="{TemplateBinding Background}"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="EmptyLabelDatagridCellStyle" TargetType="{x:Type DataGridCell}">
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="BorderBrush" Value="Black"/>
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="TextBlock.VerticalAlignment" Value="Center" />
		<Setter Property="TextBlock.Height" Value="Auto" />
		<Setter Property="Padding" Value="0,0,4,0" />
		<Setter Property="TextBlock.TextWrapping" Value="Wrap" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="BorderedDGCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource EmptyLabelDatagridCellStyle}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TextBlock.TextAlignment" Value="Right"/>
		 <Setter Property="Background" Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Foreground" Value="Blue" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="EmptyRightAlignedDGCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource EmptyLabelDatagridCellStyle}">
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="TextBlock.TextAlignment" Value="Right"/>
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{x:Null}" />
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="BorderBrush" Value="{x:Null}" />
				<Setter Property="Foreground" Value="Blue" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="transparentDatarow" TargetType="{x:Type DataGridRow}">
		<Setter Property="Margin" Value="4,4,0,0"/>
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
</ResourceDictionary>
	
  
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
<!--Style Declaration for the Vertical/Horizontal toolbar type Context menu-->
<!--Style TargetType="{x:Type ContextMenu}">
		<Setter Property="HasDropShadow" Value="True"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=ButtonBorderColor}"/>
		<Setter Property="Background" Value="{DynamicResource ResourceKey=ContextMenuBackColor}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" Background="{TemplateBinding Background}">
						<StackPanel IsItemsHost="True"
					  KeyboardNavigation.DirectionalNavigation="Cycle"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" Value="true">
							<Setter TargetName="MainBorder" Property="Padding" Value="0,3,0,3"/>
							<Setter TargetName="MainBorder" Property="CornerRadius" Value="7"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Border x:Name="MainBorder" CornerRadius="5">
						<Grid x:Name="layoutroot">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<ContentPresenter Grid.Column="0" Margin="2" x:Name="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Icon"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="MainBorder" Value="{DynamicResource ButtonBackcolor}">
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style-->